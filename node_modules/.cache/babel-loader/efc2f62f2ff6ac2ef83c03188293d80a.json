{"ast":null,"code":"// Automatically generated with Reach 0.1.2\n\n/* eslint-disable */\nexport const _version = '0.1.2';\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {};\n}\n;\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Address;\n  return {\n    infos: {\n      \"NFT\": {\n        owner: {\n          decode: (i, svs, args) => {\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 1))) {\n              const [v33] = svs;\n              return (() => {\n                return v33;\n              })(...args);\n            }\n\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2))) {\n              const [v33] = svs;\n              return (() => {\n                return v33;\n              })(...args);\n            }\n\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 3))) {\n              const [v33] = svs;\n              return (() => {\n                return v33;\n              })(...args);\n            }\n\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 4))) {\n              const [v33] = svs;\n              return (() => {\n                return v33;\n              })(...args);\n            }\n\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 5))) {\n              const [v33] = svs;\n              return (() => {\n                return v33;\n              })(...args);\n            }\n\n            stdlib.assert(false, 'illegal view');\n          },\n          ty: ctc0\n        }\n      }\n    },\n    views: {\n      1: [ctc0],\n      2: [ctc0],\n      3: [ctc0],\n      4: [ctc0],\n      5: [ctc0]\n    }\n  };\n}\n;\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n  };\n}\n;\nexport async function Bidder(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 150));\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Address;\n  const ctc3 = stdlib.T_Null;\n  const ctc4 = stdlib.T_Tuple([ctc1, ctc2]);\n  const ctc5 = stdlib.T_Bool;\n  const ctc6 = stdlib.T_Tuple([ctc1, ctc2, ctc5, ctc2, ctc2, ctc1, ctc1]);\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc2, ctc5, ctc2, ctc2, ctc1]);\n  const ctc8 = stdlib.T_Tuple([]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc2, ctc2, ctc1, ctc2, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc2, ctc2, ctc1, ctc2]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc2, ctc2, ctc2, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc2, ctc2, ctc2, ctc1]);\n  const v21 = await ctc.creationTime();\n  const txn1 = await ctc.recv(1, 3, [ctc0, ctc1, ctc0], false, false);\n  const [v26, v27, v28] = txn1.data;\n  const v30 = txn1.time;\n  const v25 = txn1.from;\n  ;\n  let v31 = false;\n  let v32 = v25;\n  let v33 = v25;\n  let v34 = stdlib.checkedBigNumberify('./index.rsh:34:70:decimal', stdlib.UInt_max, 0);\n  let v35 = true;\n  let v157 = v30;\n\n  while ((() => {\n    return v35;\n  })()) {\n    if (v31) {\n      const v71 = ctc.selfAddress('Bidder', true, stdlib.checkedBigNumberify('./index.rsh:55:20:application', stdlib.UInt_max, 70));\n      const v74 = stdlib.addressEq(v71, v32);\n      const v76 = v74 ? false : true;\n      const v80 = stdlib.addressEq(v71, v33);\n      const v82 = v80 ? false : true;\n      const v85 = v74 ? false : v82;\n      let v87;\n\n      if (v85) {\n        const v86 = stdlib.protect(ctc1, await interact.getBid(v26, v28), {\n          at: './index.rsh:56:93:application',\n          fs: ['at ./index.rsh:55:20:application call to [unknown function] (defined at: ./index.rsh:55:24:function exp)'],\n          msg: 'getBid',\n          who: 'Bidder'\n        });\n        v87 = v86;\n      } else {\n        v87 = v34;\n      }\n\n      const v101 = v85 ? v71 : v32;\n      const v102 = stdlib.gt(v87, v34);\n      const v104 = stdlib.addressEq(v33, v71);\n      const v106 = v104 ? false : true;\n      const v109 = v102 ? v106 : false;\n      const v116 = v109 ? v76 : false;\n      const txn2 = await ctc.sendrecv(4, 2, stdlib.checkedBigNumberify('./index.rsh:60:16:dot', stdlib.UInt_max, 5), [ctc2, ctc5, ctc2, ctc2, ctc1, ctc1, ctc1, ctc2], [v25, v31, v32, v33, v34, v157, v87, v101], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1, ctc2], v116, false, stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10), async txn2 => {\n        const sim_r = {\n          txns: [],\n          mapRefs: [],\n          mapsPrev: [],\n          mapsNext: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:60:16:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:60:16:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n        const [v118, v119] = txn2.data;\n        const v121 = txn2.time;\n        const v117 = txn2.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:78:17:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v33, v118, v119, v121]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:78:17:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v33, v118, v119]);\n        sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:78:17:after expr stmt semicolon', stdlib.UInt_max, 1), v33]];\n        sim_r.isHalt = false;\n        return sim_r;\n      });\n\n      if (txn2.didTimeout) {\n        const v135 = ctc.selfAddress('Bidder', true, stdlib.checkedBigNumberify('./index.rsh:61:15:application', stdlib.UInt_max, 134));\n        stdlib.protect(ctc3, await interact.seeOutcome(v26, v28, v33), {\n          at: './index.rsh:62:32:application',\n          fs: ['at ./index.rsh:61:15:application call to [unknown function] (defined at: ./index.rsh:61:38:function exp)'],\n          msg: 'seeOutcome',\n          who: 'Bidder'\n        });\n        const v137 = stdlib.addressEq(v32, v135);\n        const txn3 = await ctc.sendrecv(5, 0, stdlib.checkedBigNumberify('./index.rsh:64:18:dot', stdlib.UInt_max, 5), [ctc2, ctc5, ctc2, ctc2, ctc1, ctc1], [v25, v31, v32, v33, v34, v157], [v34, []], [], v137, false, stdlib.add(stdlib.checkedBigNumberify('./index.rsh:64:62:decimal', stdlib.UInt_max, 20), stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10)), async txn3 => {\n          const sim_r = {\n            txns: [],\n            mapRefs: [],\n            mapsPrev: [],\n            mapsNext: []\n          };\n          sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:64:18:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n          sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:64:18:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n          const [] = txn3.data;\n          const v141 = txn3.time;\n          const v138 = txn3.from;\n          sim_r.txns.push({\n            amt: v34,\n            kind: 'to',\n            tok: undefined\n          });\n          sim_r.txns.push({\n            amt: v34,\n            kind: 'from',\n            to: v33,\n            tok: undefined\n          });\n          const cv31 = false;\n          const cv32 = v32;\n          const cv33 = v32;\n          const cv34 = stdlib.checkedBigNumberify('./index.rsh:74:73:decimal', stdlib.UInt_max, 0);\n          const cv35 = true;\n          const cv157 = v141;\n\n          (() => {\n            const v31 = cv31;\n            const v32 = cv32;\n            const v33 = cv33;\n            const v34 = cv34;\n            const v35 = cv35;\n            const v157 = cv157;\n\n            if ((() => {\n              return v35;\n            })()) {\n              if (v31) {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                sim_r.isHalt = false;\n              } else {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                sim_r.isHalt = false;\n              }\n            } else {\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n              });\n              sim_r.nextSt = stdlib.digest(ctc8, []);\n              sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n              sim_r.view = [ctc8, []];\n              sim_r.isHalt = true;\n            }\n          })();\n\n          return sim_r;\n        });\n\n        if (txn3.didTimeout) {\n          stdlib.protect(ctc3, await interact.informTimeout(), {\n            at: './index.rsh:66:37:application',\n            fs: ['at ./index.rsh:65:17:application call to [unknown function] (defined at: ./index.rsh:65:40:function exp)'],\n            msg: 'informTimeout',\n            who: 'Bidder'\n          });\n          const txn4 = await ctc.sendrecv(6, 0, stdlib.checkedBigNumberify('./index.rsh:69:20:dot', stdlib.UInt_max, 5), [ctc2, ctc5, ctc2, ctc2, ctc1, ctc1], [v25, v31, v32, v33, v34, v157], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n            const sim_r = {\n              txns: [],\n              mapRefs: [],\n              mapsPrev: [],\n              mapsNext: []\n            };\n            sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:69:20:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n            sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:69:20:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n            const [] = txn4.data;\n            const v154 = txn4.time;\n            const v152 = txn4.from;\n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n            });\n            const cv31 = false;\n            const cv32 = v25;\n            const cv33 = v25;\n            const cv34 = stdlib.checkedBigNumberify('./index.rsh:70:72:decimal', stdlib.UInt_max, 0);\n            const cv35 = true;\n            const cv157 = v154;\n\n            (() => {\n              const v31 = cv31;\n              const v32 = cv32;\n              const v33 = cv33;\n              const v34 = cv34;\n              const v35 = cv35;\n              const v157 = cv157;\n\n              if ((() => {\n                return v35;\n              })()) {\n                if (v31) {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                  sim_r.isHalt = false;\n                } else {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                  sim_r.isHalt = false;\n                }\n              } else {\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                });\n                sim_r.nextSt = stdlib.digest(ctc8, []);\n                sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n                sim_r.view = [ctc8, []];\n                sim_r.isHalt = true;\n              }\n            })();\n\n            return sim_r;\n          });\n          const [] = txn4.data;\n          const v154 = txn4.time;\n          const v152 = txn4.from;\n          ;\n          const cv31 = false;\n          const cv32 = v25;\n          const cv33 = v25;\n          const cv34 = stdlib.checkedBigNumberify('./index.rsh:70:72:decimal', stdlib.UInt_max, 0);\n          const cv35 = true;\n          const cv157 = v154;\n          v31 = cv31;\n          v32 = cv32;\n          v33 = cv33;\n          v34 = cv34;\n          v35 = cv35;\n          v157 = cv157;\n          continue;\n        } else {\n          const [] = txn3.data;\n          const v141 = txn3.time;\n          const v138 = txn3.from;\n          ;\n          ;\n          const cv31 = false;\n          const cv32 = v32;\n          const cv33 = v32;\n          const cv34 = stdlib.checkedBigNumberify('./index.rsh:74:73:decimal', stdlib.UInt_max, 0);\n          const cv35 = true;\n          const cv157 = v141;\n          v31 = cv31;\n          v32 = cv32;\n          v33 = cv33;\n          v34 = cv34;\n          v35 = cv35;\n          v157 = cv157;\n          continue;\n        }\n      } else {\n        const [v118, v119] = txn2.data;\n        const v121 = txn2.time;\n        const v117 = txn2.from;\n        ;\n        stdlib.protect(ctc3, await interact.showBid(v26, v28, v118, v32), {\n          at: './index.rsh:81:27:application',\n          fs: ['at ./index.rsh:80:13:application call to [unknown function] (defined at: ./index.rsh:80:36:function exp)'],\n          msg: 'showBid',\n          who: 'Bidder'\n        });\n        const txn3 = await ctc.sendrecv(7, 0, stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), [ctc2, ctc2, ctc1, ctc2, ctc1], [v25, v33, v118, v119, v121], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn3 => {\n          const sim_r = {\n            txns: [],\n            mapRefs: [],\n            mapsPrev: [],\n            mapsNext: []\n          };\n          sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), v25, v33, v118, v119, v121]);\n          sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), v25, v33, v118, v119]);\n          const [] = txn3.data;\n          const v130 = txn3.time;\n          const v128 = txn3.from;\n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n          });\n          const cv31 = true;\n          const cv32 = v119;\n          const cv33 = v33;\n          const cv34 = v118;\n          const cv35 = true;\n          const cv157 = v130;\n\n          (() => {\n            const v31 = cv31;\n            const v32 = cv32;\n            const v33 = cv33;\n            const v34 = cv34;\n            const v35 = cv35;\n            const v157 = cv157;\n\n            if ((() => {\n              return v35;\n            })()) {\n              if (v31) {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                sim_r.isHalt = false;\n              } else {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                sim_r.isHalt = false;\n              }\n            } else {\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n              });\n              sim_r.nextSt = stdlib.digest(ctc8, []);\n              sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n              sim_r.view = [ctc8, []];\n              sim_r.isHalt = true;\n            }\n          })();\n\n          return sim_r;\n        });\n        const [] = txn3.data;\n        const v130 = txn3.time;\n        const v128 = txn3.from;\n        ;\n        const cv31 = true;\n        const cv32 = v119;\n        const cv33 = v33;\n        const cv34 = v118;\n        const cv35 = true;\n        const cv157 = v130;\n        v31 = cv31;\n        v32 = cv32;\n        v33 = cv33;\n        v34 = cv34;\n        v35 = cv35;\n        v157 = cv157;\n        continue;\n      }\n    } else {\n      const v50 = ctc.selfAddress('Bidder', true, stdlib.checkedBigNumberify('./index.rsh:41:15:application', stdlib.UInt_max, 49));\n      const v52 = stdlib.addressEq(v50, v33);\n      let v54;\n\n      if (v52) {\n        const v53 = stdlib.protect(ctc5, await interact.isAuctionOn(v26, v28), {\n          at: './index.rsh:42:81:application',\n          fs: ['at ./index.rsh:41:15:application call to [unknown function] (defined at: ./index.rsh:41:38:function exp)'],\n          msg: 'isAuctionOn',\n          who: 'Bidder'\n        });\n        v54 = v53;\n      } else {\n        v54 = true;\n      }\n\n      const v55 = stdlib.addressEq(v33, v50);\n      const txn2 = await ctc.sendrecv(8, 1, stdlib.checkedBigNumberify('./index.rsh:45:19:dot', stdlib.UInt_max, 5), [ctc2, ctc5, ctc2, ctc2, ctc1, ctc1, ctc5], [v25, v31, v32, v33, v34, v157, v54], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc5], v55, false, false, async txn2 => {\n        const sim_r = {\n          txns: [],\n          mapRefs: [],\n          mapsPrev: [],\n          mapsNext: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:45:19:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:45:19:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n        const [v58] = txn2.data;\n        const v60 = txn2.time;\n        const v57 = txn2.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n\n        if (v58) {\n          sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 8), v25, v32, v33, v34, v60]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 8), v25, v32, v33, v34]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 4), v33]];\n          sim_r.isHalt = false;\n        } else {\n          const cv31 = v31;\n          const cv32 = v32;\n          const cv33 = v33;\n          const cv34 = v34;\n          const cv35 = v58;\n          const cv157 = v60;\n\n          (() => {\n            const v31 = cv31;\n            const v32 = cv32;\n            const v33 = cv33;\n            const v34 = cv34;\n            const v35 = cv35;\n            const v157 = cv157;\n\n            if ((() => {\n              return v35;\n            })()) {\n              if (v31) {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                sim_r.isHalt = false;\n              } else {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                sim_r.isHalt = false;\n              }\n            } else {\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n              });\n              sim_r.nextSt = stdlib.digest(ctc8, []);\n              sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n              sim_r.view = [ctc8, []];\n              sim_r.isHalt = true;\n            }\n          })();\n        }\n\n        return sim_r;\n      });\n      const [v58] = txn2.data;\n      const v60 = txn2.time;\n      const v57 = txn2.from;\n      ;\n\n      if (v58) {\n        const v71 = ctc.selfAddress('Bidder', true, stdlib.checkedBigNumberify('./index.rsh:55:20:application', stdlib.UInt_max, 70));\n        const v74 = stdlib.addressEq(v71, v32);\n        const v76 = v74 ? false : true;\n        const v80 = stdlib.addressEq(v71, v33);\n        const v82 = v80 ? false : true;\n        const v85 = v74 ? false : v82;\n        let v87;\n\n        if (v85) {\n          const v86 = stdlib.protect(ctc1, await interact.getBid(v26, v28), {\n            at: './index.rsh:56:93:application',\n            fs: ['at ./index.rsh:55:20:application call to [unknown function] (defined at: ./index.rsh:55:24:function exp)'],\n            msg: 'getBid',\n            who: 'Bidder'\n          });\n          v87 = v86;\n        } else {\n          v87 = v34;\n        }\n\n        const v101 = v85 ? v71 : v32;\n        const v102 = stdlib.gt(v87, v34);\n        const v104 = stdlib.addressEq(v33, v71);\n        const v106 = v104 ? false : true;\n        const v109 = v102 ? v106 : false;\n        const v116 = v109 ? v76 : false;\n        const txn3 = await ctc.sendrecv(9, 2, stdlib.checkedBigNumberify('./index.rsh:60:16:dot', stdlib.UInt_max, 4), [ctc2, ctc2, ctc2, ctc1, ctc1, ctc1, ctc2], [v25, v32, v33, v34, v60, v87, v101], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1, ctc2], v116, false, stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10), async txn3 => {\n          const sim_r = {\n            txns: [],\n            mapRefs: [],\n            mapsPrev: [],\n            mapsNext: []\n          };\n          sim_r.prevSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:60:16:dot', stdlib.UInt_max, 8), v25, v32, v33, v34, v60]);\n          sim_r.prevSt_noPrevTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:60:16:dot', stdlib.UInt_max, 8), v25, v32, v33, v34]);\n          const [v118, v119] = txn3.data;\n          const v121 = txn3.time;\n          const v117 = txn3.from;\n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n          });\n          sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:78:17:after expr stmt semicolon', stdlib.UInt_max, 9), v25, v33, v118, v119, v121]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:78:17:after expr stmt semicolon', stdlib.UInt_max, 9), v25, v33, v118, v119]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:78:17:after expr stmt semicolon', stdlib.UInt_max, 3), v33]];\n          sim_r.isHalt = false;\n          return sim_r;\n        });\n\n        if (txn3.didTimeout) {\n          const v135 = ctc.selfAddress('Bidder', true, stdlib.checkedBigNumberify('./index.rsh:61:15:application', stdlib.UInt_max, 134));\n          stdlib.protect(ctc3, await interact.seeOutcome(v26, v28, v33), {\n            at: './index.rsh:62:32:application',\n            fs: ['at ./index.rsh:61:15:application call to [unknown function] (defined at: ./index.rsh:61:38:function exp)'],\n            msg: 'seeOutcome',\n            who: 'Bidder'\n          });\n          const v137 = stdlib.addressEq(v32, v135);\n          const txn4 = await ctc.sendrecv(10, 0, stdlib.checkedBigNumberify('./index.rsh:64:18:dot', stdlib.UInt_max, 4), [ctc2, ctc2, ctc2, ctc1, ctc1], [v25, v32, v33, v34, v60], [v34, []], [], v137, false, stdlib.add(stdlib.checkedBigNumberify('./index.rsh:64:62:decimal', stdlib.UInt_max, 20), stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10)), async txn4 => {\n            const sim_r = {\n              txns: [],\n              mapRefs: [],\n              mapsPrev: [],\n              mapsNext: []\n            };\n            sim_r.prevSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:64:18:dot', stdlib.UInt_max, 8), v25, v32, v33, v34, v60]);\n            sim_r.prevSt_noPrevTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:64:18:dot', stdlib.UInt_max, 8), v25, v32, v33, v34]);\n            const [] = txn4.data;\n            const v141 = txn4.time;\n            const v138 = txn4.from;\n            sim_r.txns.push({\n              amt: v34,\n              kind: 'to',\n              tok: undefined\n            });\n            sim_r.txns.push({\n              amt: v34,\n              kind: 'from',\n              to: v33,\n              tok: undefined\n            });\n            const cv31 = false;\n            const cv32 = v32;\n            const cv33 = v32;\n            const cv34 = stdlib.checkedBigNumberify('./index.rsh:74:73:decimal', stdlib.UInt_max, 0);\n            const cv35 = true;\n            const cv157 = v141;\n\n            (() => {\n              const v31 = cv31;\n              const v32 = cv32;\n              const v33 = cv33;\n              const v34 = cv34;\n              const v35 = cv35;\n              const v157 = cv157;\n\n              if ((() => {\n                return v35;\n              })()) {\n                if (v31) {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                  sim_r.isHalt = false;\n                } else {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                  sim_r.isHalt = false;\n                }\n              } else {\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                });\n                sim_r.nextSt = stdlib.digest(ctc8, []);\n                sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n                sim_r.view = [ctc8, []];\n                sim_r.isHalt = true;\n              }\n            })();\n\n            return sim_r;\n          });\n\n          if (txn4.didTimeout) {\n            stdlib.protect(ctc3, await interact.informTimeout(), {\n              at: './index.rsh:66:37:application',\n              fs: ['at ./index.rsh:65:17:application call to [unknown function] (defined at: ./index.rsh:65:40:function exp)'],\n              msg: 'informTimeout',\n              who: 'Bidder'\n            });\n            const txn5 = await ctc.sendrecv(11, 0, stdlib.checkedBigNumberify('./index.rsh:69:20:dot', stdlib.UInt_max, 4), [ctc2, ctc2, ctc2, ctc1, ctc1], [v25, v32, v33, v34, v60], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn5 => {\n              const sim_r = {\n                txns: [],\n                mapRefs: [],\n                mapsPrev: [],\n                mapsNext: []\n              };\n              sim_r.prevSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:69:20:dot', stdlib.UInt_max, 8), v25, v32, v33, v34, v60]);\n              sim_r.prevSt_noPrevTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:69:20:dot', stdlib.UInt_max, 8), v25, v32, v33, v34]);\n              const [] = txn5.data;\n              const v154 = txn5.time;\n              const v152 = txn5.from;\n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n              });\n              const cv31 = false;\n              const cv32 = v25;\n              const cv33 = v25;\n              const cv34 = stdlib.checkedBigNumberify('./index.rsh:70:72:decimal', stdlib.UInt_max, 0);\n              const cv35 = true;\n              const cv157 = v154;\n\n              (() => {\n                const v31 = cv31;\n                const v32 = cv32;\n                const v33 = cv33;\n                const v34 = cv34;\n                const v35 = cv35;\n                const v157 = cv157;\n\n                if ((() => {\n                  return v35;\n                })()) {\n                  if (v31) {\n                    sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                    sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                    sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                    sim_r.isHalt = false;\n                  } else {\n                    sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                    sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                    sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                    sim_r.isHalt = false;\n                  }\n                } else {\n                  sim_r.txns.push({\n                    kind: 'halt',\n                    tok: undefined\n                  });\n                  sim_r.nextSt = stdlib.digest(ctc8, []);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n                  sim_r.view = [ctc8, []];\n                  sim_r.isHalt = true;\n                }\n              })();\n\n              return sim_r;\n            });\n            const [] = txn5.data;\n            const v154 = txn5.time;\n            const v152 = txn5.from;\n            ;\n            const cv31 = false;\n            const cv32 = v25;\n            const cv33 = v25;\n            const cv34 = stdlib.checkedBigNumberify('./index.rsh:70:72:decimal', stdlib.UInt_max, 0);\n            const cv35 = true;\n            const cv157 = v154;\n            v31 = cv31;\n            v32 = cv32;\n            v33 = cv33;\n            v34 = cv34;\n            v35 = cv35;\n            v157 = cv157;\n            continue;\n          } else {\n            const [] = txn4.data;\n            const v141 = txn4.time;\n            const v138 = txn4.from;\n            ;\n            ;\n            const cv31 = false;\n            const cv32 = v32;\n            const cv33 = v32;\n            const cv34 = stdlib.checkedBigNumberify('./index.rsh:74:73:decimal', stdlib.UInt_max, 0);\n            const cv35 = true;\n            const cv157 = v141;\n            v31 = cv31;\n            v32 = cv32;\n            v33 = cv33;\n            v34 = cv34;\n            v35 = cv35;\n            v157 = cv157;\n            continue;\n          }\n        } else {\n          const [v118, v119] = txn3.data;\n          const v121 = txn3.time;\n          const v117 = txn3.from;\n          ;\n          stdlib.protect(ctc3, await interact.showBid(v26, v28, v118, v32), {\n            at: './index.rsh:81:27:application',\n            fs: ['at ./index.rsh:80:13:application call to [unknown function] (defined at: ./index.rsh:80:36:function exp)'],\n            msg: 'showBid',\n            who: 'Bidder'\n          });\n          const txn4 = await ctc.sendrecv(12, 0, stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), [ctc2, ctc2, ctc1, ctc2, ctc1], [v25, v33, v118, v119, v121], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n            const sim_r = {\n              txns: [],\n              mapRefs: [],\n              mapsPrev: [],\n              mapsNext: []\n            };\n            sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 9), v25, v33, v118, v119, v121]);\n            sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 9), v25, v33, v118, v119]);\n            const [] = txn4.data;\n            const v130 = txn4.time;\n            const v128 = txn4.from;\n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n            });\n            const cv31 = true;\n            const cv32 = v119;\n            const cv33 = v33;\n            const cv34 = v118;\n            const cv35 = true;\n            const cv157 = v130;\n\n            (() => {\n              const v31 = cv31;\n              const v32 = cv32;\n              const v33 = cv33;\n              const v34 = cv34;\n              const v35 = cv35;\n              const v157 = cv157;\n\n              if ((() => {\n                return v35;\n              })()) {\n                if (v31) {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                  sim_r.isHalt = false;\n                } else {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                  sim_r.isHalt = false;\n                }\n              } else {\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                });\n                sim_r.nextSt = stdlib.digest(ctc8, []);\n                sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n                sim_r.view = [ctc8, []];\n                sim_r.isHalt = true;\n              }\n            })();\n\n            return sim_r;\n          });\n          const [] = txn4.data;\n          const v130 = txn4.time;\n          const v128 = txn4.from;\n          ;\n          const cv31 = true;\n          const cv32 = v119;\n          const cv33 = v33;\n          const cv34 = v118;\n          const cv35 = true;\n          const cv157 = v130;\n          v31 = cv31;\n          v32 = cv32;\n          v33 = cv33;\n          v34 = cv34;\n          v35 = cv35;\n          v157 = cv157;\n          continue;\n        }\n      } else {\n        stdlib.protect(ctc3, await interact.seeOutcome(v26, v28, v33), {\n          at: './index.rsh:48:34:application',\n          fs: ['at ./index.rsh:47:17:application call to [unknown function] (defined at: ./index.rsh:47:40:function exp)'],\n          msg: 'seeOutcome',\n          who: 'Bidder'\n        });\n        const cv31 = v31;\n        const cv32 = v32;\n        const cv33 = v33;\n        const cv34 = v34;\n        const cv35 = v58;\n        const cv157 = v60;\n        v31 = cv31;\n        v32 = cv32;\n        v33 = cv33;\n        v34 = cv34;\n        v35 = cv35;\n        v157 = cv157;\n        continue;\n      }\n    }\n  }\n\n  return;\n}\n_c = Bidder;\n;\nexport async function Creator(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 150));\n  const ctc2 = stdlib.T_Address;\n  const ctc3 = stdlib.T_Null;\n  const ctc4 = stdlib.T_Tuple([ctc0, ctc2]);\n  const ctc5 = stdlib.T_Bool;\n  const ctc6 = stdlib.T_Tuple([ctc0, ctc2, ctc5, ctc2, ctc2, ctc0, ctc0]);\n  const ctc7 = stdlib.T_Tuple([ctc0, ctc2, ctc5, ctc2, ctc2, ctc0]);\n  const ctc8 = stdlib.T_Tuple([]);\n  const ctc9 = stdlib.T_Tuple([ctc0, ctc2, ctc2, ctc0, ctc2, ctc0]);\n  const ctc10 = stdlib.T_Tuple([ctc0, ctc2, ctc2, ctc0, ctc2]);\n  const ctc11 = stdlib.T_Tuple([ctc0, ctc2, ctc2, ctc2, ctc0, ctc0]);\n  const ctc12 = stdlib.T_Tuple([ctc0, ctc2, ctc2, ctc2, ctc0]);\n  const ctc13 = stdlib.T_Tuple([ctc0, ctc0]);\n  const ctc14 = stdlib.T_Tuple([ctc0]);\n  const v21 = await ctc.creationTime();\n  const v18 = stdlib.protect(ctc0, interact.deadline, 'for Creator\\'s interact field deadline');\n  const v19 = stdlib.protect(ctc1, interact.getId, 'for Creator\\'s interact field getId');\n  const v20 = stdlib.protect(ctc1, interact.nftViewAddress, 'for Creator\\'s interact field nftViewAddress');\n  const txn1 = await ctc.sendrecv(1, 3, stdlib.checkedBigNumberify('./index.rsh:32:15:dot', stdlib.UInt_max, 0), [ctc0, ctc1, ctc0, ctc1], [v21, v19, v18, v20], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1, ctc0, ctc1], true, true, false, async txn1 => {\n    const sim_r = {\n      txns: [],\n      mapRefs: [],\n      mapsPrev: [],\n      mapsNext: []\n    };\n    sim_r.prevSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:32:15:dot', stdlib.UInt_max, 0), v21]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:32:15:dot', stdlib.UInt_max, 0)]);\n    const [v26, v27, v28] = txn1.data;\n    const v30 = txn1.time;\n    const v25 = txn1.from;\n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n    });\n    const v31 = false;\n    const v32 = v25;\n    const v33 = v25;\n    const v34 = stdlib.checkedBigNumberify('./index.rsh:34:70:decimal', stdlib.UInt_max, 0);\n    const v35 = true;\n    const v157 = v30;\n\n    if ((() => {\n      return v35;\n    })()) {\n      if (v31) {\n        sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n        sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n        sim_r.isHalt = false;\n      } else {\n        sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n        sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n        sim_r.isHalt = false;\n      }\n    } else {\n      sim_r.txns.push({\n        kind: 'halt',\n        tok: undefined\n      });\n      sim_r.nextSt = stdlib.digest(ctc8, []);\n      sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n      sim_r.view = [ctc8, []];\n      sim_r.isHalt = true;\n    }\n\n    return sim_r;\n  });\n  const [v26, v27, v28] = txn1.data;\n  const v30 = txn1.time;\n  const v25 = txn1.from;\n  ;\n  let v31 = false;\n  let v32 = v25;\n  let v33 = v25;\n  let v34 = stdlib.checkedBigNumberify('./index.rsh:34:70:decimal', stdlib.UInt_max, 0);\n  let v35 = true;\n  let v157 = v30;\n\n  while ((() => {\n    return v35;\n  })()) {\n    if (v31) {\n      const txn2 = await ctc.recv(4, 2, [ctc0, ctc2], false, stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10));\n\n      if (txn2.didTimeout) {\n        stdlib.protect(ctc3, await interact.seeOutcome(v26, v28, v33), {\n          at: './index.rsh:62:32:application',\n          fs: ['at ./index.rsh:61:15:application call to [unknown function] (defined at: ./index.rsh:61:38:function exp)'],\n          msg: 'seeOutcome',\n          who: 'Creator'\n        });\n        const txn3 = await ctc.recv(5, 0, [], false, stdlib.add(stdlib.checkedBigNumberify('./index.rsh:64:62:decimal', stdlib.UInt_max, 20), stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10)));\n\n        if (txn3.didTimeout) {\n          stdlib.protect(ctc3, await interact.informTimeout(), {\n            at: './index.rsh:66:37:application',\n            fs: ['at ./index.rsh:65:17:application call to [unknown function] (defined at: ./index.rsh:65:40:function exp)'],\n            msg: 'informTimeout',\n            who: 'Creator'\n          });\n          const txn4 = await ctc.recv(6, 0, [], false, false);\n          const [] = txn4.data;\n          const v154 = txn4.time;\n          const v152 = txn4.from;\n          ;\n          const cv31 = false;\n          const cv32 = v25;\n          const cv33 = v25;\n          const cv34 = stdlib.checkedBigNumberify('./index.rsh:70:72:decimal', stdlib.UInt_max, 0);\n          const cv35 = true;\n          const cv157 = v154;\n          v31 = cv31;\n          v32 = cv32;\n          v33 = cv33;\n          v34 = cv34;\n          v35 = cv35;\n          v157 = cv157;\n          continue;\n        } else {\n          const [] = txn3.data;\n          const v141 = txn3.time;\n          const v138 = txn3.from;\n          ;\n          ;\n          const cv31 = false;\n          const cv32 = v32;\n          const cv33 = v32;\n          const cv34 = stdlib.checkedBigNumberify('./index.rsh:74:73:decimal', stdlib.UInt_max, 0);\n          const cv35 = true;\n          const cv157 = v141;\n          v31 = cv31;\n          v32 = cv32;\n          v33 = cv33;\n          v34 = cv34;\n          v35 = cv35;\n          v157 = cv157;\n          continue;\n        }\n      } else {\n        const [v118, v119] = txn2.data;\n        const v121 = txn2.time;\n        const v117 = txn2.from;\n        ;\n        stdlib.protect(ctc3, await interact.showBid(v26, v28, v118, v32), {\n          at: './index.rsh:81:27:application',\n          fs: ['at ./index.rsh:80:13:application call to [unknown function] (defined at: ./index.rsh:80:36:function exp)'],\n          msg: 'showBid',\n          who: 'Creator'\n        });\n        const txn3 = await ctc.sendrecv(7, 0, stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), [ctc2, ctc2, ctc0, ctc2, ctc0], [v25, v33, v118, v119, v121], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn3 => {\n          const sim_r = {\n            txns: [],\n            mapRefs: [],\n            mapsPrev: [],\n            mapsNext: []\n          };\n          sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), v25, v33, v118, v119, v121]);\n          sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), v25, v33, v118, v119]);\n          const [] = txn3.data;\n          const v130 = txn3.time;\n          const v128 = txn3.from;\n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n          });\n          const cv31 = true;\n          const cv32 = v119;\n          const cv33 = v33;\n          const cv34 = v118;\n          const cv35 = true;\n          const cv157 = v130;\n\n          (() => {\n            const v31 = cv31;\n            const v32 = cv32;\n            const v33 = cv33;\n            const v34 = cv34;\n            const v35 = cv35;\n            const v157 = cv157;\n\n            if ((() => {\n              return v35;\n            })()) {\n              if (v31) {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                sim_r.isHalt = false;\n              } else {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                sim_r.isHalt = false;\n              }\n            } else {\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n              });\n              sim_r.nextSt = stdlib.digest(ctc8, []);\n              sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n              sim_r.view = [ctc8, []];\n              sim_r.isHalt = true;\n            }\n          })();\n\n          return sim_r;\n        });\n        const [] = txn3.data;\n        const v130 = txn3.time;\n        const v128 = txn3.from;\n        ;\n        const cv31 = true;\n        const cv32 = v119;\n        const cv33 = v33;\n        const cv34 = v118;\n        const cv35 = true;\n        const cv157 = v130;\n        v31 = cv31;\n        v32 = cv32;\n        v33 = cv33;\n        v34 = cv34;\n        v35 = cv35;\n        v157 = cv157;\n        continue;\n      }\n    } else {\n      const v46 = stdlib.addressEq(v25, v33);\n      let v48;\n\n      if (v46) {\n        const v47 = stdlib.protect(ctc5, await interact.isAuctionOn(v26, v28), {\n          at: './index.rsh:42:81:application',\n          fs: ['at ./index.rsh:41:15:application call to [unknown function] (defined at: ./index.rsh:41:38:function exp)'],\n          msg: 'isAuctionOn',\n          who: 'Creator'\n        });\n        v48 = v47;\n      } else {\n        v48 = true;\n      }\n\n      const v56 = stdlib.addressEq(v33, v25);\n      const txn2 = await ctc.sendrecv(8, 1, stdlib.checkedBigNumberify('./index.rsh:45:19:dot', stdlib.UInt_max, 5), [ctc2, ctc5, ctc2, ctc2, ctc0, ctc0, ctc5], [v25, v31, v32, v33, v34, v157, v48], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc5], v56, false, false, async txn2 => {\n        const sim_r = {\n          txns: [],\n          mapRefs: [],\n          mapsPrev: [],\n          mapsNext: []\n        };\n        sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:45:19:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:45:19:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n        const [v58] = txn2.data;\n        const v60 = txn2.time;\n        const v57 = txn2.from;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n\n        if (v58) {\n          sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 8), v25, v32, v33, v34, v60]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 8), v25, v32, v33, v34]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 4), v33]];\n          sim_r.isHalt = false;\n        } else {\n          const cv31 = v31;\n          const cv32 = v32;\n          const cv33 = v33;\n          const cv34 = v34;\n          const cv35 = v58;\n          const cv157 = v60;\n\n          (() => {\n            const v31 = cv31;\n            const v32 = cv32;\n            const v33 = cv33;\n            const v34 = cv34;\n            const v35 = cv35;\n            const v157 = cv157;\n\n            if ((() => {\n              return v35;\n            })()) {\n              if (v31) {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                sim_r.isHalt = false;\n              } else {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                sim_r.isHalt = false;\n              }\n            } else {\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n              });\n              sim_r.nextSt = stdlib.digest(ctc8, []);\n              sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n              sim_r.view = [ctc8, []];\n              sim_r.isHalt = true;\n            }\n          })();\n        }\n\n        return sim_r;\n      });\n      const [v58] = txn2.data;\n      const v60 = txn2.time;\n      const v57 = txn2.from;\n      ;\n\n      if (v58) {\n        const txn3 = await ctc.recv(9, 2, [ctc0, ctc2], false, stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10));\n\n        if (txn3.didTimeout) {\n          stdlib.protect(ctc3, await interact.seeOutcome(v26, v28, v33), {\n            at: './index.rsh:62:32:application',\n            fs: ['at ./index.rsh:61:15:application call to [unknown function] (defined at: ./index.rsh:61:38:function exp)'],\n            msg: 'seeOutcome',\n            who: 'Creator'\n          });\n          const txn4 = await ctc.recv(10, 0, [], false, stdlib.add(stdlib.checkedBigNumberify('./index.rsh:64:62:decimal', stdlib.UInt_max, 20), stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10)));\n\n          if (txn4.didTimeout) {\n            stdlib.protect(ctc3, await interact.informTimeout(), {\n              at: './index.rsh:66:37:application',\n              fs: ['at ./index.rsh:65:17:application call to [unknown function] (defined at: ./index.rsh:65:40:function exp)'],\n              msg: 'informTimeout',\n              who: 'Creator'\n            });\n            const txn5 = await ctc.recv(11, 0, [], false, false);\n            const [] = txn5.data;\n            const v154 = txn5.time;\n            const v152 = txn5.from;\n            ;\n            const cv31 = false;\n            const cv32 = v25;\n            const cv33 = v25;\n            const cv34 = stdlib.checkedBigNumberify('./index.rsh:70:72:decimal', stdlib.UInt_max, 0);\n            const cv35 = true;\n            const cv157 = v154;\n            v31 = cv31;\n            v32 = cv32;\n            v33 = cv33;\n            v34 = cv34;\n            v35 = cv35;\n            v157 = cv157;\n            continue;\n          } else {\n            const [] = txn4.data;\n            const v141 = txn4.time;\n            const v138 = txn4.from;\n            ;\n            ;\n            const cv31 = false;\n            const cv32 = v32;\n            const cv33 = v32;\n            const cv34 = stdlib.checkedBigNumberify('./index.rsh:74:73:decimal', stdlib.UInt_max, 0);\n            const cv35 = true;\n            const cv157 = v141;\n            v31 = cv31;\n            v32 = cv32;\n            v33 = cv33;\n            v34 = cv34;\n            v35 = cv35;\n            v157 = cv157;\n            continue;\n          }\n        } else {\n          const [v118, v119] = txn3.data;\n          const v121 = txn3.time;\n          const v117 = txn3.from;\n          ;\n          stdlib.protect(ctc3, await interact.showBid(v26, v28, v118, v32), {\n            at: './index.rsh:81:27:application',\n            fs: ['at ./index.rsh:80:13:application call to [unknown function] (defined at: ./index.rsh:80:36:function exp)'],\n            msg: 'showBid',\n            who: 'Creator'\n          });\n          const txn4 = await ctc.sendrecv(12, 0, stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), [ctc2, ctc2, ctc0, ctc2, ctc0], [v25, v33, v118, v119, v121], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, async txn4 => {\n            const sim_r = {\n              txns: [],\n              mapRefs: [],\n              mapsPrev: [],\n              mapsNext: []\n            };\n            sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 9), v25, v33, v118, v119, v121]);\n            sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 9), v25, v33, v118, v119]);\n            const [] = txn4.data;\n            const v130 = txn4.time;\n            const v128 = txn4.from;\n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n            });\n            const cv31 = true;\n            const cv32 = v119;\n            const cv33 = v33;\n            const cv34 = v118;\n            const cv35 = true;\n            const cv157 = v130;\n\n            (() => {\n              const v31 = cv31;\n              const v32 = cv32;\n              const v33 = cv33;\n              const v34 = cv34;\n              const v35 = cv35;\n              const v157 = cv157;\n\n              if ((() => {\n                return v35;\n              })()) {\n                if (v31) {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                  sim_r.isHalt = false;\n                } else {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                  sim_r.isHalt = false;\n                }\n              } else {\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                });\n                sim_r.nextSt = stdlib.digest(ctc8, []);\n                sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n                sim_r.view = [ctc8, []];\n                sim_r.isHalt = true;\n              }\n            })();\n\n            return sim_r;\n          });\n          const [] = txn4.data;\n          const v130 = txn4.time;\n          const v128 = txn4.from;\n          ;\n          const cv31 = true;\n          const cv32 = v119;\n          const cv33 = v33;\n          const cv34 = v118;\n          const cv35 = true;\n          const cv157 = v130;\n          v31 = cv31;\n          v32 = cv32;\n          v33 = cv33;\n          v34 = cv34;\n          v35 = cv35;\n          v157 = cv157;\n          continue;\n        }\n      } else {\n        stdlib.protect(ctc3, await interact.seeOutcome(v26, v28, v33), {\n          at: './index.rsh:48:34:application',\n          fs: ['at ./index.rsh:47:17:application call to [unknown function] (defined at: ./index.rsh:47:40:function exp)'],\n          msg: 'seeOutcome',\n          who: 'Creator'\n        });\n        const cv31 = v31;\n        const cv32 = v32;\n        const cv33 = v33;\n        const cv34 = v34;\n        const cv35 = v58;\n        const cv157 = v60;\n        v31 = cv31;\n        v32 = cv32;\n        v33 = cv33;\n        v34 = cv34;\n        v35 = cv35;\n        v157 = cv157;\n        continue;\n      }\n    }\n  }\n\n  return;\n}\n_c2 = Creator;\n;\nconst _ALGO = {\n  appApproval: `#pragma version 3\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn OnCompletion\nint OptIn\n==\nbz normal\nglobal GroupSize\nint 1\n==\nassert\nb done\nnormal:\ngtxna 0 ApplicationArgs 8\nstore 5\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m4}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m5}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m6}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m10}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m11}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m12}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\nbyte base64(bA==)\nglobal Round\napp_global_put\nint 0\ntxn NumAccounts\n==\nassert\nbyte base64(djA=)\ngtxna 0 ApplicationArgs 2\nsubstring 0 40\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(djA=)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  mapArgSize: 165,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  mapRecordSize: 33,\n  stepargs: [null, {\n    count: 9,\n    size: 594\n  }, null, null, {\n    count: 9,\n    size: 431\n  }, {\n    count: 9,\n    size: 391\n  }, {\n    count: 9,\n    size: 391\n  }, {\n    count: 9,\n    size: 390\n  }, {\n    count: 9,\n    size: 392\n  }, {\n    count: 9,\n    size: 430\n  }, {\n    count: 9,\n    size: 390\n  }, {\n    count: 9,\n    size: 390\n  }, {\n    count: 9,\n    size: 390\n  }],\n  steps: [null, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 150\nstore 255\ndup\nsubstring 150 158\nbtoi\nstore 254\ndup\nint 158\nint 308\nsubstring3\nstore 253\npop\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:32:15:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 5\nitob\ngtxn 0 Sender\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\ngtxn 0 Sender\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\ngtxn 0 Sender\nconcat\ngtxn 0 Sender\nconcat\nint 0\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 33\nbtoi\nstore 254\ndup\nsubstring 33 65\nstore 253\ndup\nsubstring 65 97\nstore 252\ndup\nsubstring 97 105\nbtoi\nstore 251\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 8\nbtoi\nstore 250\ndup\nsubstring 8 40\nstore 249\npop\n// Handler 4\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:60:16:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 1\nitob\nload 252\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 252\nconcat\nload 250\nitob\nconcat\nload 249\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nload 4\nbtoi\nint 10\n+\ndup\ngtxn 0 LastValid\n>=\nassert\ndup\ngtxn 1 LastValid\n>=\nassert\ndup\ngtxn 2 LastValid\n>=\nassert\ndup\ngtxn 3 LastValid\n>=\nassert\npop\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 33\nbtoi\nstore 254\ndup\nsubstring 33 65\nstore 253\ndup\nsubstring 65 97\nstore 252\ndup\nsubstring 97 105\nbtoi\nstore 251\npop\n// Handler 5\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:64:18:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n-\nload 251\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 252\n==\nassert\ngtxn 4 Amount\nload 251\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 5\nitob\nload 253\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\nload 3\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\nload 4\nbtoi\nint 10\n+\ndup\ngtxn 0 FirstValid\n<=\nassert\ndup\ngtxn 1 FirstValid\n<=\nassert\ndup\ngtxn 2 FirstValid\n<=\nassert\ndup\ngtxn 3 FirstValid\n<=\nassert\ndup\ngtxn 4 FirstValid\n<=\nassert\npop\nload 4\nbtoi\nint 10\nint 20\n+\n+\ndup\ngtxn 0 LastValid\n>=\nassert\ndup\ngtxn 1 LastValid\n>=\nassert\ndup\ngtxn 2 LastValid\n>=\nassert\ndup\ngtxn 3 LastValid\n>=\nassert\ndup\ngtxn 4 LastValid\n>=\nassert\npop\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 33\nbtoi\nstore 254\ndup\nsubstring 33 65\nstore 253\ndup\nsubstring 65 97\nstore 252\ndup\nsubstring 97 105\nbtoi\nstore 251\npop\n// Handler 6\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:69:20:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 5\nitob\nload 255\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\nload 255\nconcat\nload 255\nconcat\nint 0\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nload 4\nbtoi\nint 10\nint 20\n+\n+\ndup\ngtxn 0 FirstValid\n<=\nassert\ndup\ngtxn 1 FirstValid\n<=\nassert\ndup\ngtxn 2 FirstValid\n<=\nassert\ndup\ngtxn 3 FirstValid\n<=\nassert\npop\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 64\nstore 254\ndup\nsubstring 64 72\nbtoi\nstore 253\ndup\nsubstring 72 104\nstore 252\npop\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:83:17:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 2\nitob\nload 254\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 33\nbtoi\nstore 254\ndup\nsubstring 33 65\nstore 253\ndup\nsubstring 65 97\nstore 252\ndup\nsubstring 97 105\nbtoi\nstore 251\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 1\nbtoi\nstore 250\npop\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:45:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 250\nbz l0\n// check view bs\nint 4\nitob\nload 252\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 8\nint 8\nitob\nload 255\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nb checkAccts\nl0:\nload 250\nbz l1\nload 254\nbz l2\n// check view bs\nint 2\nitob\nload 252\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nload 254\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nb checkAccts\nl2:\n// check view bs\nint 5\nitob\nload 252\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nload 254\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nb checkAccts\nl1:\nbyte base64(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==)\nload 1\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 4 Amount\nint 0\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 4 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\nload 2\nbtoi\nint 1\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\nload 3\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 64\nstore 254\ndup\nsubstring 64 96\nstore 253\ndup\nsubstring 96 104\nbtoi\nstore 252\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 8\nbtoi\nstore 251\ndup\nsubstring 8 40\nstore 250\npop\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 8\nint 8\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:60:16:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 3\nitob\nload 253\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 9\nint 9\nitob\nload 255\nconcat\nload 253\nconcat\nload 251\nitob\nconcat\nload 250\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nload 4\nbtoi\nint 10\n+\ndup\ngtxn 0 LastValid\n>=\nassert\ndup\ngtxn 1 LastValid\n>=\nassert\ndup\ngtxn 2 LastValid\n>=\nassert\ndup\ngtxn 3 LastValid\n>=\nassert\npop\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 64\nstore 254\ndup\nsubstring 64 96\nstore 253\ndup\nsubstring 96 104\nbtoi\nstore 252\npop\n// Handler 10\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 8\nint 8\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:64:18:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n-\nload 252\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 253\n==\nassert\ngtxn 4 Amount\nload 252\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 5\nitob\nload 254\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\nload 254\nconcat\nload 254\nconcat\nint 0\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\nload 3\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\nload 4\nbtoi\nint 10\n+\ndup\ngtxn 0 FirstValid\n<=\nassert\ndup\ngtxn 1 FirstValid\n<=\nassert\ndup\ngtxn 2 FirstValid\n<=\nassert\ndup\ngtxn 3 FirstValid\n<=\nassert\ndup\ngtxn 4 FirstValid\n<=\nassert\npop\nload 4\nbtoi\nint 10\nint 20\n+\n+\ndup\ngtxn 0 LastValid\n>=\nassert\ndup\ngtxn 1 LastValid\n>=\nassert\ndup\ngtxn 2 LastValid\n>=\nassert\ndup\ngtxn 3 LastValid\n>=\nassert\ndup\ngtxn 4 LastValid\n>=\nassert\npop\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 64\nstore 254\ndup\nsubstring 64 96\nstore 253\ndup\nsubstring 96 104\nbtoi\nstore 252\npop\n// Handler 11\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 8\nint 8\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:69:20:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 5\nitob\nload 255\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\nload 255\nconcat\nload 255\nconcat\nint 0\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nload 4\nbtoi\nint 10\nint 20\n+\n+\ndup\ngtxn 0 FirstValid\n<=\nassert\ndup\ngtxn 1 FirstValid\n<=\nassert\ndup\ngtxn 2 FirstValid\n<=\nassert\ndup\ngtxn 3 FirstValid\n<=\nassert\npop\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 64\nstore 254\ndup\nsubstring 64 72\nbtoi\nstore 253\ndup\nsubstring 72 104\nstore 252\npop\n// Handler 12\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 9\nint 9\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:83:17:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 2\nitob\nload 254\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`],\n  unsupported: [],\n  version: 1,\n  viewKeys: 1,\n  viewSize: 40\n};\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint8[150]\",\n                \"name\": \"v26\",\n                \"type\": \"uint8[150]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v27\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint8[150]\",\n                \"name\": \"v28\",\n                \"type\": \"uint8[150]\"\n              }\n            ],\n            \"internalType\": \"struct T6\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T19\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e10\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T19\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e11\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v121\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T14\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e12\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T12\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e4\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e5\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v121\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T14\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v58\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T17\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T18\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"NFT_owner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint8[150]\",\n                \"name\": \"v26\",\n                \"type\": \"uint8[150]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v27\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint8[150]\",\n                \"name\": \"v28\",\n                \"type\": \"uint8[150]\"\n              }\n            ],\n            \"internalType\": \"struct T6\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T19\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m10\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T19\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m11\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v121\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T14\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m12\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T12\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m4\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m5\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v121\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T14\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v58\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T17\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T18\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a160408051602080820183524382526000600181905583519182018190529192016040516020818303038152906040526002908051906020019062000072929190620000b4565b50506040805160208082018352600080835293518252825180820185905291518284015282518083038401815260609092019092528051910120905562000197565b828054620000c2906200015a565b90600052602060002090601f016020900481019282620000e6576000855562000131565b82601f106200010157805160ff191683800117855562000131565b8280016001018555821562000131579182015b828111156200013157825182559160200191906001019062000114565b506200013f92915062000143565b5090565b5b808211156200013f576000815560010162000144565b6002810460018216806200016f57607f821691505b602082108114156200019157634e487b7160e01b600052602260045260246000fd5b50919050565b61189b80620001a76000396000f3fe6080604052600436106100a05760003560e01c8063bc0ca2f311610064578063bc0ca2f31461012b578063d95c942f1461013e578063db7edf3d14610151578063dbf62f1814610164578063e633668e14610177578063f9c6a2331461018a576100a7565b80632df46cf4146100ac578063358182d3146100c1578063489ef15a146100d45780635cf275dd146100e75780638dab222014610118576100a7565b366100a757005b600080fd5b6100bf6100ba366004611415565b61019d565b005b6100bf6100cf366004611415565b610352565b6100bf6100e2366004611403565b610642565b3480156100f357600080fd5b506100fc6107fa565b6040516001600160a01b03909116815260200160405180910390f35b6100bf6101263660046114a2565b61091b565b6100bf610139366004611430565b6109ec565b6100bf61014c366004611415565b610b63565b6100bf61015f366004611430565b610cfb565b6100bf610172366004611415565b610e21565b6100bf610185366004611430565b610f26565b6100bf610198366004611430565b610f9e565b6040516101b1906002908390602001611788565b6040516020818303038152906040528051906020012060001c600054146101d757600080fd5b600080556101ea600a60a08301356117f7565b43101580156102125750600a610205601460a08401356117f7565b61020f91906117f7565b43105b61021b57600080fd5b3460808201351461022b57600080fd5b61023b60808201606083016113c6565b6040516001600160a01b039190911690608083013580156108fc02916000818181858888f19350505050158015610276573d6000803e3d6000fd5b507feb3248ee5963d5dc793eac0bd5c78f4353bb98ca05eb56307ce0ab29784c1934816040516102a6919061165d565b60405180910390a16102b661126b565b6102c360208301836113c6565b81516001600160a01b0390911690526020810151600090526102eb60608301604084016113c6565b6020808301516001600160a01b0390921691015261030f60608301604084016113c6565b6020820180516001600160a01b039092166040909201919091528051600060609091015280516001608090910152514360a09091015261034e8161103d565b5050565b604051610366906002908390602001611788565b6040516020818303038152906040528051906020012060001c6000541461038c57600080fd5b60008055341561039b57600080fd5b6103ab60e0820160c083016113e9565b1561053d577f987e13662f624cf716b328c10cdf46a875b1b4371359e6195741c333aab37ea0816040516103df919061165d565b60405180910390a160408051602081019091526000815261040660808301606084016113c6565b6001600160a01b031680825260046001556040805160208082019390935281518082038401815290820190915280516104439260029201906112b8565b506040805160a081018252600080825260208083018290529282018190526060820181905260808201529061047a908401846113c6565b6001600160a01b0316815261049560608401604085016113c6565b6001600160a01b031660208201526104b360808401606085016113c6565b6001600160a01b03908116604083810191825260808681013560608087019182524383880190815284516008602080830191909152895189169682019690965294880151871691850191909152935190941690820152915160a08301525160c082015260e0015b60408051601f1981840301815291905280516020909101206000555061063f9050565b7f987e13662f624cf716b328c10cdf46a875b1b4371359e6195741c333aab37ea08160405161056c919061165d565b60405180910390a161057c61126b565b61058960208301836113c6565b81516001600160a01b0390911690526105a860408301602084016113e9565b602082015190151590526105c260608301604084016113c6565b6020808301516001600160a01b039092169101526105e660808301606084016113c6565b6020820180516001600160a01b0390921660409092019190915251608083013560609091015261061c60e0830160c084016113e9565b602082018051911515608090920191909152514360a09091015261034e8161103d565b50565b604051610656906002908390602001611788565b6040516020818303038152906040528051906020012060001c6000541461067c57600080fd5b6000805561068f600a60a08301356117f7565b431061069a57600080fd5b34156106a557600080fd5b7f0469bf783bd4478b35a4199698773f1a79d3e3265fbc379f762317cfdd279476816040516106d49190611638565b60405180910390a16040805160208101909152600081526106fb60808301606084016113c6565b6001600160a01b0316808252600180556040805160208082019390935281518082038401815290820190915280516107379260029201906112b8565b506040805160a081018252600080825260208083018290529282018190526060820181905260808201529061076e908401846113c6565b6001600160a01b0316815261078960808401606085016113c6565b6001600160a01b0316602082015260c083013560408201526107b2610100840160e085016113c6565b6001600160a01b031660608201524360808201526040516107da906004908390602001611727565b60408051601f198184030181529190528051602090910120600055505050565b60006001805414156108b0576000600280546108159061181b565b80601f01602080910402602001604051908101604052809291908181526020018280546108419061181b565b801561088e5780601f106108635761010080835404028352916020019161088e565b820191906000526020600020905b81548152906001019060200180831161087157829003601f168201915b50505050508060200190518101906108a6919061144b565b5191506109189050565b600260015414156108ca576000600280546108159061181b565b600360015414156108e4576000600280546108159061181b565b600460015414156108fe576000600280546108159061181b565b600560015414156100a7576000600280546108159061181b565b90565b60408051600060208201528235918101919091526060016040516020818303038152906040528051906020012060001c6000541461095857600080fd5b60008055341561096757600080fd5b7f0e517d773f7c4499e5af7ee8f6e2a2a6d8ba0a0ae9161eff670b93a4b10f01ec8160405161099691906116d7565b60405180910390a16109a661126b565b8051339081905260208083018051600090819052815190920183905280516040019290925281516060015280516001608090910152514360a09091015261034e8161103d565b604051610a00906008908390602001611774565b6040516020818303038152906040528051906020012060001c60005414610a2657600080fd5b60008055610a39600a60808301356117f7565b4310158015610a615750600a610a54601460808401356117f7565b610a5e91906117f7565b43105b610a6a57600080fd5b34606082013514610a7a57600080fd5b610a8a60608201604083016113c6565b6040516001600160a01b039190911690606083013580156108fc02916000818181858888f19350505050158015610ac5573d6000803e3d6000fd5b507f19c885d72fe56e7b48652b1fe5b7722ea0c3f3b5d2168e41801b41814a65af4081604051610af591906116c9565b60405180910390a1610b0561126b565b610b1260208301836113c6565b81516001600160a01b03909116905260208082015160009052610b3b90604084019084016113c6565b6020808301516001600160a01b039092169181019190915261030f90604084019084016113c6565b604051610b77906008908390602001611774565b6040516020818303038152906040528051906020012060001c60005414610b9d57600080fd5b60008055610bb0600a60808301356117f7565b4310610bbb57600080fd5b3415610bc657600080fd5b7f7fe68888f95464a709fe8ab0d7952c086d623c185ae2a7d664dcc69b2fcbf29281604051610bf591906116ab565b60405180910390a1604080516020810190915260008152610c1c60608301604084016113c6565b6001600160a01b03168082526003600155604080516020808201939093528151808203840181529082019091528051610c599260029201906112b8565b506040805160a0810182526000808252602080830182905292820181905260608201819052608082015290610c90908401846113c6565b6001600160a01b03168152610cab60608401604085016113c6565b6001600160a01b0316602082015260a08301356040820152610cd360e0840160c085016113c6565b6001600160a01b031660608201524360808201526040516107da906009908390602001611727565b604051610d0f906004908390602001611713565b6040516020818303038152906040528051906020012060001c60005414610d3557600080fd5b600080553415610d4457600080fd5b7f52e0b8c9f6fbbcaedbe1877c6a2129afbec363781e20a9fbdc0b82d0e9c64b2a81604051610d739190611684565b60405180910390a1610d8361126b565b610d9060208301836113c6565b81516001600160a01b039091169052602081015160019052610db860808301606084016113c6565b6020808301516001600160a01b0390921691810191909152610de090604084019084016113c6565b6020820180516001600160a01b0390921660409283015280519184013560609092019190915280516001608090910152514360a09091015261034e8161103d565b604051610e35906002908390602001611788565b6040516020818303038152906040528051906020012060001c60005414610e5b57600080fd5b60008055600a610e70601460a08401356117f7565b610e7a91906117f7565b431015610e8657600080fd5b3415610e9157600080fd5b7fd955cbb17807de820d98406c826a456d6232deefc5754dd24d1ea2fcaf22381481604051610ec0919061165d565b60405180910390a1610ed061126b565b610edd60208301836113c6565b81516001600160a01b03909116905260208082015160009052610f02908301836113c6565b6020808301516001600160a01b039092169181019190915261030f908301836113c6565b604051610f3a906009908390602001611713565b6040516020818303038152906040528051906020012060001c60005414610f6057600080fd5b600080553415610f6f57600080fd5b7f77b154499c7ca86f06a3044bbb50372490dd947a58b28760ad8e925baff6335681604051610d739190611684565b604051610fb2906008908390602001611774565b6040516020818303038152906040528051906020012060001c60005414610fd857600080fd5b60008055600a610fed601460808401356117f7565b610ff791906117f7565b43101561100357600080fd5b341561100e57600080fd5b7f8f4bf9cf37e03326ba5edcaaf032fed3ba63d0502c18d7b0ace88df4066bff2681604051610ec091906116c9565b8060200151608001511561123a5760208101515115611157576040805160208101909152600081526020828101516040908101516001600160a01b0316808452600260015581519283015201604051602081830303815290604052600290805190602001906110ad9291906112b8565b506040805160c0810182526000808252602080830182815283850183815260608086018581526080870186815260a08089019788528b51516001600160a01b039081168a528c880180515115159097528651880151811690955285518a0151909416909152835190910151905290510151909152915190916111349160029184910161179c565b60408051601f198184030181529190528051602090910120600055506112359050565b6040805160208101909152600081526020828101516040908101516001600160a01b0316808452600560015581519283015201604051602081830303815290604052600290805190602001906111ae9291906112b8565b506040805160c0810182526000808252602080830182815283850183815260608086018581526080870186815260a08089019788528b51516001600160a01b039081168a528c880180515115159097528651880151811690955285518a01519094169091528351909101519052905101519091529151909161051a9160029184910161179c565b61063f565b604080518082019091526000808252602082015261034e81600080805560018190556112689060029061133c565b33ff5b60408051606081018252600091810191825290819081526040805160c08101825260008082526020828101829052928201819052606082018190526080820181905260a082015291015290565b8280546112c49061181b565b90600052602060002090601f0160209004810192826112e6576000855561132c565b82601f106112ff57805160ff191683800117855561132c565b8280016001018555821561132c579182015b8281111561132c578251825591602001919060010190611311565b50611338929150611374565b5090565b5080546113489061181b565b6000825580601f1061135a575061063f565b601f01602090049060005260206000209081019061063f91905b5b808211156113385760008155600101611375565b8035801515811461139957600080fd5b919050565b600060e082840312156113af578081fd5b50919050565b600060c082840312156113af578081fd5b6000602082840312156113d7578081fd5b81356113e281611850565b9392505050565b6000602082840312156113fa578081fd5b6113e282611389565b600061010082840312156113af578081fd5b600060e08284031215611426578081fd5b6113e2838361139e565b600060c08284031215611441578081fd5b6113e283836113b5565b60006020828403121561145c578081fd5b6040516020810181811067ffffffffffffffff8211171561148b57634e487b7160e01b83526041600452602483fd5b604052825161149981611850565b81529392505050565b60006125c082840312156113af578081fd5b806000805b60968110156114e957823560ff81168082146114d3578384fd5b86525060209485019492909201916001016114b9565b5050505050565b80356114fb81611850565b6001600160a01b03908116835260208201359061151782611850565b8082166020850152604083013560408501526060830135915061153982611850565b166060830152608090810135910152565b80358252602081013561155c81611850565b6001600160a01b03166020929092019190915250565b803561157d81611850565b6001600160a01b03908116835260208201359061159982611850565b90811660208401526040820135906115b082611850565b16604083015260608181013590830152608090810135910152565b80356115d681611850565b6001600160a01b0381811684526115ef60208401611389565b151560208501526040830135915061160682611850565b908116604084015260608201359061161d82611850565b1660608301526080818101359083015260a090810135910152565b610100810161164782846115cb565b61165760c0830160c0850161154a565b92915050565b60e0810161166b82846115cb565b61167760c08401611389565b151560c083015292915050565b60c0810161169282846114f0565b61169e60a08401611389565b151560a083015292915050565b60e081016116b98284611572565b61165760a0830160a0850161154a565b60c081016116928284611572565b813581526125c081016116f060208084019085016114b4565b6112e0838101359083015261130061170c8184018286016114b4565b5092915050565b82815260c081016113e260208301846114f0565b91825280516001600160a01b03908116602080850191909152820151811660408085019190915282015160608085019190915282015116608080840191909152015160a082015260c00190565b82815260c081016113e26020830184611572565b82815260e081016113e260208301846115cb565b600060e08201905083825260018060a01b0380845116602084015260208401511515604084015280604085015116606084015280606085015116608084015250608083015160a083015260a083015160c08301529392505050565b6000821982111561181657634e487b7160e01b81526011600452602481fd5b500190565b60028104600182168061182f57607f821691505b602082108114156113af57634e487b7160e01b600052602260045260246000fd5b6001600160a01b038116811461063f57600080fdfea2646970667358221220d9bdbee10f4269e7174e381dbe646d87b8d3e35f8e599eeaf9bf042be02a625564736f6c63430008020033`,\n  deployMode: `DM_constructor`,\n  views: {\n    NFT: {\n      owner: `NFT_owner`\n    }\n  }\n};\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Bidder\");\n$RefreshReg$(_c2, \"Creator\");","map":{"version":3,"sources":["/home/yaote/final/final/src/build/index.main.mjs"],"names":["_version","getExports","s","stdlib","reachStdlib","_getViews","ctc0","T_Address","infos","owner","decode","i","svs","args","eq","checkedBigNumberify","UInt_max","v33","assert","ty","views","_getMaps","T_Tuple","mapDataTy","Bidder","ctc","interact","T_Bytes","ctc1","T_UInt","ctc2","ctc3","T_Null","ctc4","ctc5","T_Bool","ctc6","ctc7","ctc8","ctc9","ctc10","ctc11","ctc12","v21","creationTime","txn1","recv","v26","v27","v28","data","v30","time","v25","from","v31","v32","v34","v35","v157","v71","selfAddress","v74","addressEq","v76","v80","v82","v85","v87","v86","protect","getBid","at","fs","msg","who","v101","v102","gt","v104","v106","v109","v116","txn2","sendrecv","sim_r","txns","mapRefs","mapsPrev","mapsNext","prevSt","digest","prevSt_noPrevTime","v118","v119","v121","v117","push","amt","kind","tok","undefined","nextSt","nextSt_noTime","view","isHalt","didTimeout","v135","seeOutcome","v137","txn3","add","v141","v138","to","cv31","cv32","cv33","cv34","cv35","cv157","informTimeout","txn4","v154","v152","showBid","v130","v128","v50","v52","v54","v53","isAuctionOn","v55","v58","v60","v57","txn5","Creator","ctc13","ctc14","v18","deadline","v19","getId","v20","nftViewAddress","v46","v48","v47","v56","_ALGO","appApproval","appApproval0","appClear","mapArgSize","mapDataKeys","mapDataSize","mapRecordSize","stepargs","count","size","steps","unsupported","version","viewKeys","viewSize","_ETH","ABI","Bytecode","deployMode","NFT","_Connectors","ALGO","ETH"],"mappings":"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,UAAAA,EAAE,EAAE,CAAC,0GAAD,CAFyD;AAG7DC,UAAAA,GAAG,EAAE,YAHwD;AAI7DC,UAAAA,GAAG,EAAE;AAJwD,SAA/D;AAOA,cAAMwC,IAAI,GAAG5D,GAAb;AACA,cAAM6D,IAAI,GAAG5D,GAAb;AACA,cAAM6D,IAAI,GAAGpG,GAAb;AACA,cAAMqG,IAAI,GAAG7D,GAAb;AACA,cAAM8D,IAAI,GAAGe,GAAb;AACA,cAAMd,KAAK,GAAGe,GAAd;AAEAhF,QAAAA,GAAG,GAAG4D,IAAN;AACA3D,QAAAA,GAAG,GAAG4D,IAAN;AACAnG,QAAAA,GAAG,GAAGoG,IAAN;AACA5D,QAAAA,GAAG,GAAG6D,IAAN;AACA5D,QAAAA,GAAG,GAAG6D,IAAN;AACA5D,QAAAA,IAAI,GAAG6D,KAAP;AAEA;AAAU;AACX;AAAC;;AACN;AAEC;MApfmBkB,O;AAofnB;AAEH,MAAMa,KAAK,GAAG;AACZC,EAAAA,WAAW,EAAG;AAChpHc;AAqHZC,EAAAA,YAAY,EAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnLc;AAoLZC,EAAAA,QAAQ,EAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnMc;AAoMZjI,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzOc;AA0OZkI,EAAAA,UAAU,EAAE,GA1OA;AA2OZC,EAAAA,WAAW,EAAE,CA3OD;AA4OZC,EAAAA,WAAW,EAAE,CA5OD;AA6OZC,EAAAA,aAAa,EAAE,EA7OH;AA8OZC,EAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO;AACfC,IAAAA,KAAK,EAAE,CADQ;AAEfC,IAAAA,IAAI,EAAE;AAFS,GAAP,EAGL,IAHK,EAGC,IAHD,EAGO;AACfD,IAAAA,KAAK,EAAE,CADQ;AAEfC,IAAAA,IAAI,EAAE;AAFS,GAHP,EAML;AACHD,IAAAA,KAAK,EAAE,CADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GANK,EASL;AACHD,IAAAA,KAAK,EAAE,CADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GATK,EAYL;AACHD,IAAAA,KAAK,EAAE,CADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAZK,EAeL;AACHD,IAAAA,KAAK,EAAE,CADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAfK,EAkBL;AACHD,IAAAA,KAAK,EAAE,CADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAlBK,EAqBL;AACHD,IAAAA,KAAK,EAAE,CADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GArBK,EAwBL;AACHD,IAAAA,KAAK,EAAE,CADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAxBK,EA2BL;AACHD,IAAAA,KAAK,EAAE,CADJ;AAEHC,IAAAA,IAAI,EAAE;AAFH,GA3BK,CA9OE;AA6QZC,EAAAA,KAAK,EAAE,CAAC,IAAD,EAAQ;AACjhtWS,EAsWL;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3lBS,EA2lBL;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjyBS,EAiyx8BS,EAwlwCS,EAkwn8CS,EAmhrDS,EAgrrhES,CA7QK;AAmyEZC,EAAAA,WAAW,EAAE,EAnyED;AAoyEZC,EAAAA,OAAO,EAAE,CApyEG;AAqyEZC,EAAAA,QAAQ,EAAE,CAryEE;AAsyEZC,EAAAA,QAAQ,EAAE;AAtyEE,CAAd;AAwyEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EA9oCa;AA+oCXC,EAAAA,QAAQ,EAAG,woaA/oCA;AAgpCXC,EAAAA,UAAU,EAAG,gBAhpCF;AAipCXtJ,EAAAA,KAAK,EAAE;AACLuJ,IAAAA,GAAG,EAAE;AACHlK,MAAAA,KAAK,EAAG;AADL;AADA;AAjpCI,CAAb;AAwpCA,OAAO,MAAMmK,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAEtB,KADmB;AAEzBuB,EAAAA,GAAG,EAAEP;AAFoB,CAApB","sourcesContent":["// Automatically generated with Reach 0.1.2\n/* eslint-disable */\nexport const _version = '0.1.2';\n\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\n\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Address;\n  return {\n    infos: {\n      \"NFT\": {\n        owner: {\n          decode: (i, svs, args) => {\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 1))) {\n              const [v33] = svs;\n              return (((() => {\n                \n                \n                return v33;}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2))) {\n              const [v33] = svs;\n              return (((() => {\n                \n                \n                return v33;}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 3))) {\n              const [v33] = svs;\n              return (((() => {\n                \n                \n                return v33;}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 4))) {\n              const [v33] = svs;\n              return (((() => {\n                \n                \n                return v33;}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 5))) {\n              const [v33] = svs;\n              return (((() => {\n                \n                \n                return v33;}))(...args));\n              }\n            \n            stdlib.assert(false, 'illegal view')\n            },\n          ty: ctc0\n          }\n        }\n      },\n    views: {\n      1: [ctc0],\n      2: [ctc0],\n      3: [ctc0],\n      4: [ctc0],\n      5: [ctc0]\n      }\n    };\n  };\n\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n    };\n  };\n\nexport async function Bidder(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 150));\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Address;\n  const ctc3 = stdlib.T_Null;\n  const ctc4 = stdlib.T_Tuple([ctc1, ctc2]);\n  const ctc5 = stdlib.T_Bool;\n  const ctc6 = stdlib.T_Tuple([ctc1, ctc2, ctc5, ctc2, ctc2, ctc1, ctc1]);\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc2, ctc5, ctc2, ctc2, ctc1]);\n  const ctc8 = stdlib.T_Tuple([]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc2, ctc2, ctc1, ctc2, ctc1]);\n  const ctc10 = stdlib.T_Tuple([ctc1, ctc2, ctc2, ctc1, ctc2]);\n  const ctc11 = stdlib.T_Tuple([ctc1, ctc2, ctc2, ctc2, ctc1, ctc1]);\n  const ctc12 = stdlib.T_Tuple([ctc1, ctc2, ctc2, ctc2, ctc1]);\n  \n  \n  const v21 = await ctc.creationTime();\n  const txn1 = await (ctc.recv(1, 3, [ctc0, ctc1, ctc0], false, false));\n  const [v26, v27, v28] = txn1.data;\n  const v30 = txn1.time;\n  const v25 = txn1.from;\n  ;\n  let v31 = false;\n  let v32 = v25;\n  let v33 = v25;\n  let v34 = stdlib.checkedBigNumberify('./index.rsh:34:70:decimal', stdlib.UInt_max, 0);\n  let v35 = true;\n  let v157 = v30;\n  \n  while ((() => {\n    \n    return v35;})()) {\n    if (v31) {\n      const v71 = ctc.selfAddress('Bidder', true, stdlib.checkedBigNumberify('./index.rsh:55:20:application', stdlib.UInt_max, 70));\n      const v74 = stdlib.addressEq(v71, v32);\n      const v76 = v74 ? false : true;\n      const v80 = stdlib.addressEq(v71, v33);\n      const v82 = v80 ? false : true;\n      const v85 = v74 ? false : v82;\n      let v87;\n      if (v85) {\n        const v86 = stdlib.protect(ctc1, await interact.getBid(v26, v28), {\n          at: './index.rsh:56:93:application',\n          fs: ['at ./index.rsh:55:20:application call to [unknown function] (defined at: ./index.rsh:55:24:function exp)'],\n          msg: 'getBid',\n          who: 'Bidder'\n          });\n        v87 = v86;\n        }\n      else {\n        v87 = v34;\n        }\n      const v101 = v85 ? v71 : v32;\n      \n      const v102 = stdlib.gt(v87, v34);\n      const v104 = stdlib.addressEq(v33, v71);\n      const v106 = v104 ? false : true;\n      const v109 = v102 ? v106 : false;\n      const v116 = v109 ? v76 : false;\n      \n      const txn2 = await (ctc.sendrecv(4, 2, stdlib.checkedBigNumberify('./index.rsh:60:16:dot', stdlib.UInt_max, 5), [ctc2, ctc5, ctc2, ctc2, ctc1, ctc1, ctc1, ctc2], [v25, v31, v32, v33, v34, v157, v87, v101], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1, ctc2], v116, false, stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10), (async (txn2) => {\n        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n        \n        sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:60:16:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:60:16:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n        const [v118, v119] = txn2.data;\n        const v121 = txn2.time;\n        const v117 = txn2.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:78:17:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v33, v118, v119, v121]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:78:17:after expr stmt semicolon', stdlib.UInt_max, 4), v25, v33, v118, v119]);\n        sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:78:17:after expr stmt semicolon', stdlib.UInt_max, 1), v33]];\n        sim_r.isHalt = false;\n        \n        return sim_r;\n        })));\n      if (txn2.didTimeout) {\n        const v135 = ctc.selfAddress('Bidder', true, stdlib.checkedBigNumberify('./index.rsh:61:15:application', stdlib.UInt_max, 134));\n        stdlib.protect(ctc3, await interact.seeOutcome(v26, v28, v33), {\n          at: './index.rsh:62:32:application',\n          fs: ['at ./index.rsh:61:15:application call to [unknown function] (defined at: ./index.rsh:61:38:function exp)'],\n          msg: 'seeOutcome',\n          who: 'Bidder'\n          });\n        \n        const v137 = stdlib.addressEq(v32, v135);\n        \n        const txn3 = await (ctc.sendrecv(5, 0, stdlib.checkedBigNumberify('./index.rsh:64:18:dot', stdlib.UInt_max, 5), [ctc2, ctc5, ctc2, ctc2, ctc1, ctc1], [v25, v31, v32, v33, v34, v157], [v34, []], [], v137, false, stdlib.add(stdlib.checkedBigNumberify('./index.rsh:64:62:decimal', stdlib.UInt_max, 20), stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10)), (async (txn3) => {\n          const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n          \n          sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:64:18:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n          sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:64:18:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n          const [] = txn3.data;\n          const v141 = txn3.time;\n          const v138 = txn3.from;\n          \n          sim_r.txns.push({\n            amt: v34,\n            kind: 'to',\n            tok: undefined\n            });\n          sim_r.txns.push({\n            amt: v34,\n            kind: 'from',\n            to: v33,\n            tok: undefined\n            });\n          const cv31 = false;\n          const cv32 = v32;\n          const cv33 = v32;\n          const cv34 = stdlib.checkedBigNumberify('./index.rsh:74:73:decimal', stdlib.UInt_max, 0);\n          const cv35 = true;\n          const cv157 = v141;\n          \n          (() => {\n            const v31 = cv31;\n            const v32 = cv32;\n            const v33 = cv33;\n            const v34 = cv34;\n            const v35 = cv35;\n            const v157 = cv157;\n            \n            if ((() => {\n              \n              return v35;})()) {\n              if (v31) {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                sim_r.isHalt = false;\n                }\n              else {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                sim_r.isHalt = false;\n                }}\n            else {\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n                })\n              sim_r.nextSt = stdlib.digest(ctc8, []);\n              sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n              sim_r.view = [ctc8, []];\n              sim_r.isHalt = true;\n              }})();\n          return sim_r;\n          })));\n        if (txn3.didTimeout) {\n          stdlib.protect(ctc3, await interact.informTimeout(), {\n            at: './index.rsh:66:37:application',\n            fs: ['at ./index.rsh:65:17:application call to [unknown function] (defined at: ./index.rsh:65:40:function exp)'],\n            msg: 'informTimeout',\n            who: 'Bidder'\n            });\n          \n          const txn4 = await (ctc.sendrecv(6, 0, stdlib.checkedBigNumberify('./index.rsh:69:20:dot', stdlib.UInt_max, 5), [ctc2, ctc5, ctc2, ctc2, ctc1, ctc1], [v25, v31, v32, v33, v34, v157], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n            const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n            \n            sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:69:20:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n            sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:69:20:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n            const [] = txn4.data;\n            const v154 = txn4.time;\n            const v152 = txn4.from;\n            \n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n              });\n            const cv31 = false;\n            const cv32 = v25;\n            const cv33 = v25;\n            const cv34 = stdlib.checkedBigNumberify('./index.rsh:70:72:decimal', stdlib.UInt_max, 0);\n            const cv35 = true;\n            const cv157 = v154;\n            \n            (() => {\n              const v31 = cv31;\n              const v32 = cv32;\n              const v33 = cv33;\n              const v34 = cv34;\n              const v35 = cv35;\n              const v157 = cv157;\n              \n              if ((() => {\n                \n                return v35;})()) {\n                if (v31) {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                  sim_r.isHalt = false;\n                  }\n                else {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                  sim_r.isHalt = false;\n                  }}\n              else {\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                  })\n                sim_r.nextSt = stdlib.digest(ctc8, []);\n                sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n                sim_r.view = [ctc8, []];\n                sim_r.isHalt = true;\n                }})();\n            return sim_r;\n            })));\n          const [] = txn4.data;\n          const v154 = txn4.time;\n          const v152 = txn4.from;\n          ;\n          const cv31 = false;\n          const cv32 = v25;\n          const cv33 = v25;\n          const cv34 = stdlib.checkedBigNumberify('./index.rsh:70:72:decimal', stdlib.UInt_max, 0);\n          const cv35 = true;\n          const cv157 = v154;\n          \n          v31 = cv31;\n          v32 = cv32;\n          v33 = cv33;\n          v34 = cv34;\n          v35 = cv35;\n          v157 = cv157;\n          \n          continue;\n          }\n        else {\n          const [] = txn3.data;\n          const v141 = txn3.time;\n          const v138 = txn3.from;\n          ;\n          ;\n          const cv31 = false;\n          const cv32 = v32;\n          const cv33 = v32;\n          const cv34 = stdlib.checkedBigNumberify('./index.rsh:74:73:decimal', stdlib.UInt_max, 0);\n          const cv35 = true;\n          const cv157 = v141;\n          \n          v31 = cv31;\n          v32 = cv32;\n          v33 = cv33;\n          v34 = cv34;\n          v35 = cv35;\n          v157 = cv157;\n          \n          continue;}\n        }\n      else {\n        const [v118, v119] = txn2.data;\n        const v121 = txn2.time;\n        const v117 = txn2.from;\n        ;\n        stdlib.protect(ctc3, await interact.showBid(v26, v28, v118, v32), {\n          at: './index.rsh:81:27:application',\n          fs: ['at ./index.rsh:80:13:application call to [unknown function] (defined at: ./index.rsh:80:36:function exp)'],\n          msg: 'showBid',\n          who: 'Bidder'\n          });\n        \n        const txn3 = await (ctc.sendrecv(7, 0, stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), [ctc2, ctc2, ctc1, ctc2, ctc1], [v25, v33, v118, v119, v121], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn3) => {\n          const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n          \n          sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), v25, v33, v118, v119, v121]);\n          sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), v25, v33, v118, v119]);\n          const [] = txn3.data;\n          const v130 = txn3.time;\n          const v128 = txn3.from;\n          \n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n            });\n          const cv31 = true;\n          const cv32 = v119;\n          const cv33 = v33;\n          const cv34 = v118;\n          const cv35 = true;\n          const cv157 = v130;\n          \n          (() => {\n            const v31 = cv31;\n            const v32 = cv32;\n            const v33 = cv33;\n            const v34 = cv34;\n            const v35 = cv35;\n            const v157 = cv157;\n            \n            if ((() => {\n              \n              return v35;})()) {\n              if (v31) {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                sim_r.isHalt = false;\n                }\n              else {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                sim_r.isHalt = false;\n                }}\n            else {\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n                })\n              sim_r.nextSt = stdlib.digest(ctc8, []);\n              sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n              sim_r.view = [ctc8, []];\n              sim_r.isHalt = true;\n              }})();\n          return sim_r;\n          })));\n        const [] = txn3.data;\n        const v130 = txn3.time;\n        const v128 = txn3.from;\n        ;\n        const cv31 = true;\n        const cv32 = v119;\n        const cv33 = v33;\n        const cv34 = v118;\n        const cv35 = true;\n        const cv157 = v130;\n        \n        v31 = cv31;\n        v32 = cv32;\n        v33 = cv33;\n        v34 = cv34;\n        v35 = cv35;\n        v157 = cv157;\n        \n        continue;\n        }\n      }\n    else {\n      const v50 = ctc.selfAddress('Bidder', true, stdlib.checkedBigNumberify('./index.rsh:41:15:application', stdlib.UInt_max, 49));\n      const v52 = stdlib.addressEq(v50, v33);\n      let v54;\n      if (v52) {\n        const v53 = stdlib.protect(ctc5, await interact.isAuctionOn(v26, v28), {\n          at: './index.rsh:42:81:application',\n          fs: ['at ./index.rsh:41:15:application call to [unknown function] (defined at: ./index.rsh:41:38:function exp)'],\n          msg: 'isAuctionOn',\n          who: 'Bidder'\n          });\n        v54 = v53;\n        }\n      else {\n        v54 = true;\n        }\n      \n      const v55 = stdlib.addressEq(v33, v50);\n      \n      const txn2 = await (ctc.sendrecv(8, 1, stdlib.checkedBigNumberify('./index.rsh:45:19:dot', stdlib.UInt_max, 5), [ctc2, ctc5, ctc2, ctc2, ctc1, ctc1, ctc5], [v25, v31, v32, v33, v34, v157, v54], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc5], v55, false, false, (async (txn2) => {\n        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n        \n        sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:45:19:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:45:19:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n        const [v58] = txn2.data;\n        const v60 = txn2.time;\n        const v57 = txn2.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        if (v58) {\n          sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 8), v25, v32, v33, v34, v60]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 8), v25, v32, v33, v34]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 4), v33]];\n          sim_r.isHalt = false;\n          }\n        else {\n          \n          const cv31 = v31;\n          const cv32 = v32;\n          const cv33 = v33;\n          const cv34 = v34;\n          const cv35 = v58;\n          const cv157 = v60;\n          \n          (() => {\n            const v31 = cv31;\n            const v32 = cv32;\n            const v33 = cv33;\n            const v34 = cv34;\n            const v35 = cv35;\n            const v157 = cv157;\n            \n            if ((() => {\n              \n              return v35;})()) {\n              if (v31) {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                sim_r.isHalt = false;\n                }\n              else {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                sim_r.isHalt = false;\n                }}\n            else {\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n                })\n              sim_r.nextSt = stdlib.digest(ctc8, []);\n              sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n              sim_r.view = [ctc8, []];\n              sim_r.isHalt = true;\n              }})();}\n        return sim_r;\n        })));\n      const [v58] = txn2.data;\n      const v60 = txn2.time;\n      const v57 = txn2.from;\n      ;\n      if (v58) {\n        const v71 = ctc.selfAddress('Bidder', true, stdlib.checkedBigNumberify('./index.rsh:55:20:application', stdlib.UInt_max, 70));\n        const v74 = stdlib.addressEq(v71, v32);\n        const v76 = v74 ? false : true;\n        const v80 = stdlib.addressEq(v71, v33);\n        const v82 = v80 ? false : true;\n        const v85 = v74 ? false : v82;\n        let v87;\n        if (v85) {\n          const v86 = stdlib.protect(ctc1, await interact.getBid(v26, v28), {\n            at: './index.rsh:56:93:application',\n            fs: ['at ./index.rsh:55:20:application call to [unknown function] (defined at: ./index.rsh:55:24:function exp)'],\n            msg: 'getBid',\n            who: 'Bidder'\n            });\n          v87 = v86;\n          }\n        else {\n          v87 = v34;\n          }\n        const v101 = v85 ? v71 : v32;\n        \n        const v102 = stdlib.gt(v87, v34);\n        const v104 = stdlib.addressEq(v33, v71);\n        const v106 = v104 ? false : true;\n        const v109 = v102 ? v106 : false;\n        const v116 = v109 ? v76 : false;\n        \n        const txn3 = await (ctc.sendrecv(9, 2, stdlib.checkedBigNumberify('./index.rsh:60:16:dot', stdlib.UInt_max, 4), [ctc2, ctc2, ctc2, ctc1, ctc1, ctc1, ctc2], [v25, v32, v33, v34, v60, v87, v101], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1, ctc2], v116, false, stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10), (async (txn3) => {\n          const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n          \n          sim_r.prevSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:60:16:dot', stdlib.UInt_max, 8), v25, v32, v33, v34, v60]);\n          sim_r.prevSt_noPrevTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:60:16:dot', stdlib.UInt_max, 8), v25, v32, v33, v34]);\n          const [v118, v119] = txn3.data;\n          const v121 = txn3.time;\n          const v117 = txn3.from;\n          \n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n            });\n          sim_r.nextSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:78:17:after expr stmt semicolon', stdlib.UInt_max, 9), v25, v33, v118, v119, v121]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:78:17:after expr stmt semicolon', stdlib.UInt_max, 9), v25, v33, v118, v119]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:78:17:after expr stmt semicolon', stdlib.UInt_max, 3), v33]];\n          sim_r.isHalt = false;\n          \n          return sim_r;\n          })));\n        if (txn3.didTimeout) {\n          const v135 = ctc.selfAddress('Bidder', true, stdlib.checkedBigNumberify('./index.rsh:61:15:application', stdlib.UInt_max, 134));\n          stdlib.protect(ctc3, await interact.seeOutcome(v26, v28, v33), {\n            at: './index.rsh:62:32:application',\n            fs: ['at ./index.rsh:61:15:application call to [unknown function] (defined at: ./index.rsh:61:38:function exp)'],\n            msg: 'seeOutcome',\n            who: 'Bidder'\n            });\n          \n          const v137 = stdlib.addressEq(v32, v135);\n          \n          const txn4 = await (ctc.sendrecv(10, 0, stdlib.checkedBigNumberify('./index.rsh:64:18:dot', stdlib.UInt_max, 4), [ctc2, ctc2, ctc2, ctc1, ctc1], [v25, v32, v33, v34, v60], [v34, []], [], v137, false, stdlib.add(stdlib.checkedBigNumberify('./index.rsh:64:62:decimal', stdlib.UInt_max, 20), stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10)), (async (txn4) => {\n            const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n            \n            sim_r.prevSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:64:18:dot', stdlib.UInt_max, 8), v25, v32, v33, v34, v60]);\n            sim_r.prevSt_noPrevTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:64:18:dot', stdlib.UInt_max, 8), v25, v32, v33, v34]);\n            const [] = txn4.data;\n            const v141 = txn4.time;\n            const v138 = txn4.from;\n            \n            sim_r.txns.push({\n              amt: v34,\n              kind: 'to',\n              tok: undefined\n              });\n            sim_r.txns.push({\n              amt: v34,\n              kind: 'from',\n              to: v33,\n              tok: undefined\n              });\n            const cv31 = false;\n            const cv32 = v32;\n            const cv33 = v32;\n            const cv34 = stdlib.checkedBigNumberify('./index.rsh:74:73:decimal', stdlib.UInt_max, 0);\n            const cv35 = true;\n            const cv157 = v141;\n            \n            (() => {\n              const v31 = cv31;\n              const v32 = cv32;\n              const v33 = cv33;\n              const v34 = cv34;\n              const v35 = cv35;\n              const v157 = cv157;\n              \n              if ((() => {\n                \n                return v35;})()) {\n                if (v31) {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                  sim_r.isHalt = false;\n                  }\n                else {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                  sim_r.isHalt = false;\n                  }}\n              else {\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                  })\n                sim_r.nextSt = stdlib.digest(ctc8, []);\n                sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n                sim_r.view = [ctc8, []];\n                sim_r.isHalt = true;\n                }})();\n            return sim_r;\n            })));\n          if (txn4.didTimeout) {\n            stdlib.protect(ctc3, await interact.informTimeout(), {\n              at: './index.rsh:66:37:application',\n              fs: ['at ./index.rsh:65:17:application call to [unknown function] (defined at: ./index.rsh:65:40:function exp)'],\n              msg: 'informTimeout',\n              who: 'Bidder'\n              });\n            \n            const txn5 = await (ctc.sendrecv(11, 0, stdlib.checkedBigNumberify('./index.rsh:69:20:dot', stdlib.UInt_max, 4), [ctc2, ctc2, ctc2, ctc1, ctc1], [v25, v32, v33, v34, v60], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn5) => {\n              const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n              \n              sim_r.prevSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:69:20:dot', stdlib.UInt_max, 8), v25, v32, v33, v34, v60]);\n              sim_r.prevSt_noPrevTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:69:20:dot', stdlib.UInt_max, 8), v25, v32, v33, v34]);\n              const [] = txn5.data;\n              const v154 = txn5.time;\n              const v152 = txn5.from;\n              \n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n                });\n              const cv31 = false;\n              const cv32 = v25;\n              const cv33 = v25;\n              const cv34 = stdlib.checkedBigNumberify('./index.rsh:70:72:decimal', stdlib.UInt_max, 0);\n              const cv35 = true;\n              const cv157 = v154;\n              \n              (() => {\n                const v31 = cv31;\n                const v32 = cv32;\n                const v33 = cv33;\n                const v34 = cv34;\n                const v35 = cv35;\n                const v157 = cv157;\n                \n                if ((() => {\n                  \n                  return v35;})()) {\n                  if (v31) {\n                    sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                    sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                    sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                    sim_r.isHalt = false;\n                    }\n                  else {\n                    sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                    sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                    sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                    sim_r.isHalt = false;\n                    }}\n                else {\n                  sim_r.txns.push({\n                    kind: 'halt',\n                    tok: undefined\n                    })\n                  sim_r.nextSt = stdlib.digest(ctc8, []);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n                  sim_r.view = [ctc8, []];\n                  sim_r.isHalt = true;\n                  }})();\n              return sim_r;\n              })));\n            const [] = txn5.data;\n            const v154 = txn5.time;\n            const v152 = txn5.from;\n            ;\n            const cv31 = false;\n            const cv32 = v25;\n            const cv33 = v25;\n            const cv34 = stdlib.checkedBigNumberify('./index.rsh:70:72:decimal', stdlib.UInt_max, 0);\n            const cv35 = true;\n            const cv157 = v154;\n            \n            v31 = cv31;\n            v32 = cv32;\n            v33 = cv33;\n            v34 = cv34;\n            v35 = cv35;\n            v157 = cv157;\n            \n            continue;\n            }\n          else {\n            const [] = txn4.data;\n            const v141 = txn4.time;\n            const v138 = txn4.from;\n            ;\n            ;\n            const cv31 = false;\n            const cv32 = v32;\n            const cv33 = v32;\n            const cv34 = stdlib.checkedBigNumberify('./index.rsh:74:73:decimal', stdlib.UInt_max, 0);\n            const cv35 = true;\n            const cv157 = v141;\n            \n            v31 = cv31;\n            v32 = cv32;\n            v33 = cv33;\n            v34 = cv34;\n            v35 = cv35;\n            v157 = cv157;\n            \n            continue;}\n          }\n        else {\n          const [v118, v119] = txn3.data;\n          const v121 = txn3.time;\n          const v117 = txn3.from;\n          ;\n          stdlib.protect(ctc3, await interact.showBid(v26, v28, v118, v32), {\n            at: './index.rsh:81:27:application',\n            fs: ['at ./index.rsh:80:13:application call to [unknown function] (defined at: ./index.rsh:80:36:function exp)'],\n            msg: 'showBid',\n            who: 'Bidder'\n            });\n          \n          const txn4 = await (ctc.sendrecv(12, 0, stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), [ctc2, ctc2, ctc1, ctc2, ctc1], [v25, v33, v118, v119, v121], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n            const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n            \n            sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 9), v25, v33, v118, v119, v121]);\n            sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 9), v25, v33, v118, v119]);\n            const [] = txn4.data;\n            const v130 = txn4.time;\n            const v128 = txn4.from;\n            \n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n              });\n            const cv31 = true;\n            const cv32 = v119;\n            const cv33 = v33;\n            const cv34 = v118;\n            const cv35 = true;\n            const cv157 = v130;\n            \n            (() => {\n              const v31 = cv31;\n              const v32 = cv32;\n              const v33 = cv33;\n              const v34 = cv34;\n              const v35 = cv35;\n              const v157 = cv157;\n              \n              if ((() => {\n                \n                return v35;})()) {\n                if (v31) {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                  sim_r.isHalt = false;\n                  }\n                else {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                  sim_r.isHalt = false;\n                  }}\n              else {\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                  })\n                sim_r.nextSt = stdlib.digest(ctc8, []);\n                sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n                sim_r.view = [ctc8, []];\n                sim_r.isHalt = true;\n                }})();\n            return sim_r;\n            })));\n          const [] = txn4.data;\n          const v130 = txn4.time;\n          const v128 = txn4.from;\n          ;\n          const cv31 = true;\n          const cv32 = v119;\n          const cv33 = v33;\n          const cv34 = v118;\n          const cv35 = true;\n          const cv157 = v130;\n          \n          v31 = cv31;\n          v32 = cv32;\n          v33 = cv33;\n          v34 = cv34;\n          v35 = cv35;\n          v157 = cv157;\n          \n          continue;\n          }\n        }\n      else {\n        stdlib.protect(ctc3, await interact.seeOutcome(v26, v28, v33), {\n          at: './index.rsh:48:34:application',\n          fs: ['at ./index.rsh:47:17:application call to [unknown function] (defined at: ./index.rsh:47:40:function exp)'],\n          msg: 'seeOutcome',\n          who: 'Bidder'\n          });\n        \n        const cv31 = v31;\n        const cv32 = v32;\n        const cv33 = v33;\n        const cv34 = v34;\n        const cv35 = v58;\n        const cv157 = v60;\n        \n        v31 = cv31;\n        v32 = cv32;\n        v33 = cv33;\n        v34 = cv34;\n        v35 = cv35;\n        v157 = cv157;\n        \n        continue;}\n      }}\n  return;\n  \n  };\nexport async function Creator(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 150));\n  const ctc2 = stdlib.T_Address;\n  const ctc3 = stdlib.T_Null;\n  const ctc4 = stdlib.T_Tuple([ctc0, ctc2]);\n  const ctc5 = stdlib.T_Bool;\n  const ctc6 = stdlib.T_Tuple([ctc0, ctc2, ctc5, ctc2, ctc2, ctc0, ctc0]);\n  const ctc7 = stdlib.T_Tuple([ctc0, ctc2, ctc5, ctc2, ctc2, ctc0]);\n  const ctc8 = stdlib.T_Tuple([]);\n  const ctc9 = stdlib.T_Tuple([ctc0, ctc2, ctc2, ctc0, ctc2, ctc0]);\n  const ctc10 = stdlib.T_Tuple([ctc0, ctc2, ctc2, ctc0, ctc2]);\n  const ctc11 = stdlib.T_Tuple([ctc0, ctc2, ctc2, ctc2, ctc0, ctc0]);\n  const ctc12 = stdlib.T_Tuple([ctc0, ctc2, ctc2, ctc2, ctc0]);\n  const ctc13 = stdlib.T_Tuple([ctc0, ctc0]);\n  const ctc14 = stdlib.T_Tuple([ctc0]);\n  \n  \n  const v21 = await ctc.creationTime();\n  const v18 = stdlib.protect(ctc0, interact.deadline, 'for Creator\\'s interact field deadline');\n  const v19 = stdlib.protect(ctc1, interact.getId, 'for Creator\\'s interact field getId');\n  const v20 = stdlib.protect(ctc1, interact.nftViewAddress, 'for Creator\\'s interact field nftViewAddress');\n  \n  const txn1 = await (ctc.sendrecv(1, 3, stdlib.checkedBigNumberify('./index.rsh:32:15:dot', stdlib.UInt_max, 0), [ctc0, ctc1, ctc0, ctc1], [v21, v19, v18, v20], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1, ctc0, ctc1], true, true, false, (async (txn1) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:32:15:dot', stdlib.UInt_max, 0), v21]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:32:15:dot', stdlib.UInt_max, 0)]);\n    const [v26, v27, v28] = txn1.data;\n    const v30 = txn1.time;\n    const v25 = txn1.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v31 = false;\n    const v32 = v25;\n    const v33 = v25;\n    const v34 = stdlib.checkedBigNumberify('./index.rsh:34:70:decimal', stdlib.UInt_max, 0);\n    const v35 = true;\n    const v157 = v30;\n    \n    if ((() => {\n      \n      return v35;})()) {\n      if (v31) {\n        sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n        sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n        sim_r.isHalt = false;\n        }\n      else {\n        sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n        sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n        sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n        sim_r.isHalt = false;\n        }}\n    else {\n      sim_r.txns.push({\n        kind: 'halt',\n        tok: undefined\n        })\n      sim_r.nextSt = stdlib.digest(ctc8, []);\n      sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n      sim_r.view = [ctc8, []];\n      sim_r.isHalt = true;\n      }\n    return sim_r;\n    })));\n  const [v26, v27, v28] = txn1.data;\n  const v30 = txn1.time;\n  const v25 = txn1.from;\n  ;\n  let v31 = false;\n  let v32 = v25;\n  let v33 = v25;\n  let v34 = stdlib.checkedBigNumberify('./index.rsh:34:70:decimal', stdlib.UInt_max, 0);\n  let v35 = true;\n  let v157 = v30;\n  \n  while ((() => {\n    \n    return v35;})()) {\n    if (v31) {\n      const txn2 = await (ctc.recv(4, 2, [ctc0, ctc2], false, stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10)));\n      if (txn2.didTimeout) {\n        stdlib.protect(ctc3, await interact.seeOutcome(v26, v28, v33), {\n          at: './index.rsh:62:32:application',\n          fs: ['at ./index.rsh:61:15:application call to [unknown function] (defined at: ./index.rsh:61:38:function exp)'],\n          msg: 'seeOutcome',\n          who: 'Creator'\n          });\n        \n        const txn3 = await (ctc.recv(5, 0, [], false, stdlib.add(stdlib.checkedBigNumberify('./index.rsh:64:62:decimal', stdlib.UInt_max, 20), stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10))));\n        if (txn3.didTimeout) {\n          stdlib.protect(ctc3, await interact.informTimeout(), {\n            at: './index.rsh:66:37:application',\n            fs: ['at ./index.rsh:65:17:application call to [unknown function] (defined at: ./index.rsh:65:40:function exp)'],\n            msg: 'informTimeout',\n            who: 'Creator'\n            });\n          \n          const txn4 = await (ctc.recv(6, 0, [], false, false));\n          const [] = txn4.data;\n          const v154 = txn4.time;\n          const v152 = txn4.from;\n          ;\n          const cv31 = false;\n          const cv32 = v25;\n          const cv33 = v25;\n          const cv34 = stdlib.checkedBigNumberify('./index.rsh:70:72:decimal', stdlib.UInt_max, 0);\n          const cv35 = true;\n          const cv157 = v154;\n          \n          v31 = cv31;\n          v32 = cv32;\n          v33 = cv33;\n          v34 = cv34;\n          v35 = cv35;\n          v157 = cv157;\n          \n          continue;\n          }\n        else {\n          const [] = txn3.data;\n          const v141 = txn3.time;\n          const v138 = txn3.from;\n          ;\n          ;\n          const cv31 = false;\n          const cv32 = v32;\n          const cv33 = v32;\n          const cv34 = stdlib.checkedBigNumberify('./index.rsh:74:73:decimal', stdlib.UInt_max, 0);\n          const cv35 = true;\n          const cv157 = v141;\n          \n          v31 = cv31;\n          v32 = cv32;\n          v33 = cv33;\n          v34 = cv34;\n          v35 = cv35;\n          v157 = cv157;\n          \n          continue;}\n        }\n      else {\n        const [v118, v119] = txn2.data;\n        const v121 = txn2.time;\n        const v117 = txn2.from;\n        ;\n        stdlib.protect(ctc3, await interact.showBid(v26, v28, v118, v32), {\n          at: './index.rsh:81:27:application',\n          fs: ['at ./index.rsh:80:13:application call to [unknown function] (defined at: ./index.rsh:80:36:function exp)'],\n          msg: 'showBid',\n          who: 'Creator'\n          });\n        \n        const txn3 = await (ctc.sendrecv(7, 0, stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), [ctc2, ctc2, ctc0, ctc2, ctc0], [v25, v33, v118, v119, v121], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn3) => {\n          const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n          \n          sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), v25, v33, v118, v119, v121]);\n          sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), v25, v33, v118, v119]);\n          const [] = txn3.data;\n          const v130 = txn3.time;\n          const v128 = txn3.from;\n          \n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n            });\n          const cv31 = true;\n          const cv32 = v119;\n          const cv33 = v33;\n          const cv34 = v118;\n          const cv35 = true;\n          const cv157 = v130;\n          \n          (() => {\n            const v31 = cv31;\n            const v32 = cv32;\n            const v33 = cv33;\n            const v34 = cv34;\n            const v35 = cv35;\n            const v157 = cv157;\n            \n            if ((() => {\n              \n              return v35;})()) {\n              if (v31) {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                sim_r.isHalt = false;\n                }\n              else {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                sim_r.isHalt = false;\n                }}\n            else {\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n                })\n              sim_r.nextSt = stdlib.digest(ctc8, []);\n              sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n              sim_r.view = [ctc8, []];\n              sim_r.isHalt = true;\n              }})();\n          return sim_r;\n          })));\n        const [] = txn3.data;\n        const v130 = txn3.time;\n        const v128 = txn3.from;\n        ;\n        const cv31 = true;\n        const cv32 = v119;\n        const cv33 = v33;\n        const cv34 = v118;\n        const cv35 = true;\n        const cv157 = v130;\n        \n        v31 = cv31;\n        v32 = cv32;\n        v33 = cv33;\n        v34 = cv34;\n        v35 = cv35;\n        v157 = cv157;\n        \n        continue;\n        }\n      }\n    else {\n      const v46 = stdlib.addressEq(v25, v33);\n      let v48;\n      if (v46) {\n        const v47 = stdlib.protect(ctc5, await interact.isAuctionOn(v26, v28), {\n          at: './index.rsh:42:81:application',\n          fs: ['at ./index.rsh:41:15:application call to [unknown function] (defined at: ./index.rsh:41:38:function exp)'],\n          msg: 'isAuctionOn',\n          who: 'Creator'\n          });\n        v48 = v47;\n        }\n      else {\n        v48 = true;\n        }\n      \n      const v56 = stdlib.addressEq(v33, v25);\n      \n      const txn2 = await (ctc.sendrecv(8, 1, stdlib.checkedBigNumberify('./index.rsh:45:19:dot', stdlib.UInt_max, 5), [ctc2, ctc5, ctc2, ctc2, ctc0, ctc0, ctc5], [v25, v31, v32, v33, v34, v157, v48], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc5], v56, false, false, (async (txn2) => {\n        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n        \n        sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:45:19:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n        sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:45:19:dot', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n        const [v58] = txn2.data;\n        const v60 = txn2.time;\n        const v57 = txn2.from;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        if (v58) {\n          sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 8), v25, v32, v33, v34, v60]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 8), v25, v32, v33, v34]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 4), v33]];\n          sim_r.isHalt = false;\n          }\n        else {\n          \n          const cv31 = v31;\n          const cv32 = v32;\n          const cv33 = v33;\n          const cv34 = v34;\n          const cv35 = v58;\n          const cv157 = v60;\n          \n          (() => {\n            const v31 = cv31;\n            const v32 = cv32;\n            const v33 = cv33;\n            const v34 = cv34;\n            const v35 = cv35;\n            const v157 = cv157;\n            \n            if ((() => {\n              \n              return v35;})()) {\n              if (v31) {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                sim_r.isHalt = false;\n                }\n              else {\n                sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                sim_r.isHalt = false;\n                }}\n            else {\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n                })\n              sim_r.nextSt = stdlib.digest(ctc8, []);\n              sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n              sim_r.view = [ctc8, []];\n              sim_r.isHalt = true;\n              }})();}\n        return sim_r;\n        })));\n      const [v58] = txn2.data;\n      const v60 = txn2.time;\n      const v57 = txn2.from;\n      ;\n      if (v58) {\n        const txn3 = await (ctc.recv(9, 2, [ctc0, ctc2], false, stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10)));\n        if (txn3.didTimeout) {\n          stdlib.protect(ctc3, await interact.seeOutcome(v26, v28, v33), {\n            at: './index.rsh:62:32:application',\n            fs: ['at ./index.rsh:61:15:application call to [unknown function] (defined at: ./index.rsh:61:38:function exp)'],\n            msg: 'seeOutcome',\n            who: 'Creator'\n            });\n          \n          const txn4 = await (ctc.recv(10, 0, [], false, stdlib.add(stdlib.checkedBigNumberify('./index.rsh:64:62:decimal', stdlib.UInt_max, 20), stdlib.checkedBigNumberify('./index.rsh:60:106:decimal', stdlib.UInt_max, 10))));\n          if (txn4.didTimeout) {\n            stdlib.protect(ctc3, await interact.informTimeout(), {\n              at: './index.rsh:66:37:application',\n              fs: ['at ./index.rsh:65:17:application call to [unknown function] (defined at: ./index.rsh:65:40:function exp)'],\n              msg: 'informTimeout',\n              who: 'Creator'\n              });\n            \n            const txn5 = await (ctc.recv(11, 0, [], false, false));\n            const [] = txn5.data;\n            const v154 = txn5.time;\n            const v152 = txn5.from;\n            ;\n            const cv31 = false;\n            const cv32 = v25;\n            const cv33 = v25;\n            const cv34 = stdlib.checkedBigNumberify('./index.rsh:70:72:decimal', stdlib.UInt_max, 0);\n            const cv35 = true;\n            const cv157 = v154;\n            \n            v31 = cv31;\n            v32 = cv32;\n            v33 = cv33;\n            v34 = cv34;\n            v35 = cv35;\n            v157 = cv157;\n            \n            continue;\n            }\n          else {\n            const [] = txn4.data;\n            const v141 = txn4.time;\n            const v138 = txn4.from;\n            ;\n            ;\n            const cv31 = false;\n            const cv32 = v32;\n            const cv33 = v32;\n            const cv34 = stdlib.checkedBigNumberify('./index.rsh:74:73:decimal', stdlib.UInt_max, 0);\n            const cv35 = true;\n            const cv157 = v141;\n            \n            v31 = cv31;\n            v32 = cv32;\n            v33 = cv33;\n            v34 = cv34;\n            v35 = cv35;\n            v157 = cv157;\n            \n            continue;}\n          }\n        else {\n          const [v118, v119] = txn3.data;\n          const v121 = txn3.time;\n          const v117 = txn3.from;\n          ;\n          stdlib.protect(ctc3, await interact.showBid(v26, v28, v118, v32), {\n            at: './index.rsh:81:27:application',\n            fs: ['at ./index.rsh:80:13:application call to [unknown function] (defined at: ./index.rsh:80:36:function exp)'],\n            msg: 'showBid',\n            who: 'Creator'\n            });\n          \n          const txn4 = await (ctc.sendrecv(12, 0, stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 4), [ctc2, ctc2, ctc0, ctc2, ctc0], [v25, v33, v118, v119, v121], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [], true, false, false, (async (txn4) => {\n            const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n            \n            sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 9), v25, v33, v118, v119, v121]);\n            sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:83:17:dot', stdlib.UInt_max, 9), v25, v33, v118, v119]);\n            const [] = txn4.data;\n            const v130 = txn4.time;\n            const v128 = txn4.from;\n            \n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n              });\n            const cv31 = true;\n            const cv32 = v119;\n            const cv33 = v33;\n            const cv34 = v118;\n            const cv35 = true;\n            const cv157 = v130;\n            \n            (() => {\n              const v31 = cv31;\n              const v32 = cv32;\n              const v33 = cv33;\n              const v34 = cv34;\n              const v35 = cv35;\n              const v157 = cv157;\n              \n              if ((() => {\n                \n                return v35;})()) {\n                if (v31) {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:54:17:after expr stmt semicolon', stdlib.UInt_max, 2), v33]];\n                  sim_r.isHalt = false;\n                  }\n                else {\n                  sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34, v157]);\n                  sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 2), v25, v31, v32, v33, v34]);\n                  sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:39:19:after expr stmt semicolon', stdlib.UInt_max, 5), v33]];\n                  sim_r.isHalt = false;\n                  }}\n              else {\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                  })\n                sim_r.nextSt = stdlib.digest(ctc8, []);\n                sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n                sim_r.view = [ctc8, []];\n                sim_r.isHalt = true;\n                }})();\n            return sim_r;\n            })));\n          const [] = txn4.data;\n          const v130 = txn4.time;\n          const v128 = txn4.from;\n          ;\n          const cv31 = true;\n          const cv32 = v119;\n          const cv33 = v33;\n          const cv34 = v118;\n          const cv35 = true;\n          const cv157 = v130;\n          \n          v31 = cv31;\n          v32 = cv32;\n          v33 = cv33;\n          v34 = cv34;\n          v35 = cv35;\n          v157 = cv157;\n          \n          continue;\n          }\n        }\n      else {\n        stdlib.protect(ctc3, await interact.seeOutcome(v26, v28, v33), {\n          at: './index.rsh:48:34:application',\n          fs: ['at ./index.rsh:47:17:application call to [unknown function] (defined at: ./index.rsh:47:40:function exp)'],\n          msg: 'seeOutcome',\n          who: 'Creator'\n          });\n        \n        const cv31 = v31;\n        const cv32 = v32;\n        const cv33 = v33;\n        const cv34 = v34;\n        const cv35 = v58;\n        const cv157 = v60;\n        \n        v31 = cv31;\n        v32 = cv32;\n        v33 = cv33;\n        v34 = cv34;\n        v35 = cv35;\n        v157 = cv157;\n        \n        continue;}\n      }}\n  return;\n  \n  };\n\nconst _ALGO = {\n  appApproval: `#pragma version 3\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn OnCompletion\nint OptIn\n==\nbz normal\nglobal GroupSize\nint 1\n==\nassert\nb done\nnormal:\ngtxna 0 ApplicationArgs 8\nstore 5\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m4}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m5}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m6}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m10}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m11}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m12}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\nbyte base64(bA==)\nglobal Round\napp_global_put\nint 0\ntxn NumAccounts\n==\nassert\nbyte base64(djA=)\ngtxna 0 ApplicationArgs 2\nsubstring 0 40\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(djA=)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  mapArgSize: 165,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  mapRecordSize: 33,\n  stepargs: [null, {\n    count: 9,\n    size: 594\n    }, null, null, {\n    count: 9,\n    size: 431\n    }, {\n    count: 9,\n    size: 391\n    }, {\n    count: 9,\n    size: 391\n    }, {\n    count: 9,\n    size: 390\n    }, {\n    count: 9,\n    size: 392\n    }, {\n    count: 9,\n    size: 430\n    }, {\n    count: 9,\n    size: 390\n    }, {\n    count: 9,\n    size: 390\n    }, {\n    count: 9,\n    size: 390\n    }],\n  steps: [null, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 150\nstore 255\ndup\nsubstring 150 158\nbtoi\nstore 254\ndup\nint 158\nint 308\nsubstring3\nstore 253\npop\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:32:15:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 5\nitob\ngtxn 0 Sender\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\ngtxn 0 Sender\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\ngtxn 0 Sender\nconcat\ngtxn 0 Sender\nconcat\nint 0\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 33\nbtoi\nstore 254\ndup\nsubstring 33 65\nstore 253\ndup\nsubstring 65 97\nstore 252\ndup\nsubstring 97 105\nbtoi\nstore 251\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 8\nbtoi\nstore 250\ndup\nsubstring 8 40\nstore 249\npop\n// Handler 4\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:60:16:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 1\nitob\nload 252\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 252\nconcat\nload 250\nitob\nconcat\nload 249\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nload 4\nbtoi\nint 10\n+\ndup\ngtxn 0 LastValid\n>=\nassert\ndup\ngtxn 1 LastValid\n>=\nassert\ndup\ngtxn 2 LastValid\n>=\nassert\ndup\ngtxn 3 LastValid\n>=\nassert\npop\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 33\nbtoi\nstore 254\ndup\nsubstring 33 65\nstore 253\ndup\nsubstring 65 97\nstore 252\ndup\nsubstring 97 105\nbtoi\nstore 251\npop\n// Handler 5\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:64:18:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n-\nload 251\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 252\n==\nassert\ngtxn 4 Amount\nload 251\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 5\nitob\nload 253\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nload 253\nconcat\nint 0\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\nload 3\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\nload 4\nbtoi\nint 10\n+\ndup\ngtxn 0 FirstValid\n<=\nassert\ndup\ngtxn 1 FirstValid\n<=\nassert\ndup\ngtxn 2 FirstValid\n<=\nassert\ndup\ngtxn 3 FirstValid\n<=\nassert\ndup\ngtxn 4 FirstValid\n<=\nassert\npop\nload 4\nbtoi\nint 10\nint 20\n+\n+\ndup\ngtxn 0 LastValid\n>=\nassert\ndup\ngtxn 1 LastValid\n>=\nassert\ndup\ngtxn 2 LastValid\n>=\nassert\ndup\ngtxn 3 LastValid\n>=\nassert\ndup\ngtxn 4 LastValid\n>=\nassert\npop\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 33\nbtoi\nstore 254\ndup\nsubstring 33 65\nstore 253\ndup\nsubstring 65 97\nstore 252\ndup\nsubstring 97 105\nbtoi\nstore 251\npop\n// Handler 6\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:69:20:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 5\nitob\nload 255\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\nload 255\nconcat\nload 255\nconcat\nint 0\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nload 4\nbtoi\nint 10\nint 20\n+\n+\ndup\ngtxn 0 FirstValid\n<=\nassert\ndup\ngtxn 1 FirstValid\n<=\nassert\ndup\ngtxn 2 FirstValid\n<=\nassert\ndup\ngtxn 3 FirstValid\n<=\nassert\npop\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 64\nstore 254\ndup\nsubstring 64 72\nbtoi\nstore 253\ndup\nsubstring 72 104\nstore 252\npop\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:83:17:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 2\nitob\nload 254\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 33\nbtoi\nstore 254\ndup\nsubstring 33 65\nstore 253\ndup\nsubstring 65 97\nstore 252\ndup\nsubstring 97 105\nbtoi\nstore 251\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 1\nbtoi\nstore 250\npop\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:45:19:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nload 250\nbz l0\n// check view bs\nint 4\nitob\nload 252\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 8\nint 8\nitob\nload 255\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nb checkAccts\nl0:\nload 250\nbz l1\nload 254\nbz l2\n// check view bs\nint 2\nitob\nload 252\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nload 254\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nb checkAccts\nl2:\n// check view bs\nint 5\nitob\nload 252\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nload 254\nitob // bool\nsubstring 7 8\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nb checkAccts\nl1:\nbyte base64(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==)\nload 1\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 4 Amount\nint 0\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 4 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\nload 2\nbtoi\nint 1\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\nload 3\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 64\nstore 254\ndup\nsubstring 64 96\nstore 253\ndup\nsubstring 96 104\nbtoi\nstore 252\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 8\nbtoi\nstore 251\ndup\nsubstring 8 40\nstore 250\npop\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 8\nint 8\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:60:16:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 3\nitob\nload 253\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 9\nint 9\nitob\nload 255\nconcat\nload 253\nconcat\nload 251\nitob\nconcat\nload 250\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nload 4\nbtoi\nint 10\n+\ndup\ngtxn 0 LastValid\n>=\nassert\ndup\ngtxn 1 LastValid\n>=\nassert\ndup\ngtxn 2 LastValid\n>=\nassert\ndup\ngtxn 3 LastValid\n>=\nassert\npop\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 64\nstore 254\ndup\nsubstring 64 96\nstore 253\ndup\nsubstring 96 104\nbtoi\nstore 252\npop\n// Handler 10\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 8\nint 8\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:64:18:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n-\nload 252\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 253\n==\nassert\ngtxn 4 Amount\nload 252\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\n// check view bs\nint 5\nitob\nload 254\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\nload 254\nconcat\nload 254\nconcat\nint 0\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 5\n==\nassert\nload 3\nbtoi\ngtxn 4 Fee\n==\nassert\n// Check time limits\nload 4\nbtoi\nint 10\n+\ndup\ngtxn 0 FirstValid\n<=\nassert\ndup\ngtxn 1 FirstValid\n<=\nassert\ndup\ngtxn 2 FirstValid\n<=\nassert\ndup\ngtxn 3 FirstValid\n<=\nassert\ndup\ngtxn 4 FirstValid\n<=\nassert\npop\nload 4\nbtoi\nint 10\nint 20\n+\n+\ndup\ngtxn 0 LastValid\n>=\nassert\ndup\ngtxn 1 LastValid\n>=\nassert\ndup\ngtxn 2 LastValid\n>=\nassert\ndup\ngtxn 3 LastValid\n>=\nassert\ndup\ngtxn 4 LastValid\n>=\nassert\npop\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 64\nstore 254\ndup\nsubstring 64 96\nstore 253\ndup\nsubstring 96 104\nbtoi\nstore 252\npop\n// Handler 11\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 8\nint 8\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nconcat\nload 252\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:69:20:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 5\nitob\nload 255\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\nload 255\nconcat\nload 255\nconcat\nint 0\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nload 4\nbtoi\nint 10\nint 20\n+\n+\ndup\ngtxn 0 FirstValid\n<=\nassert\ndup\ngtxn 1 FirstValid\n<=\nassert\ndup\ngtxn 2 FirstValid\n<=\nassert\ndup\ngtxn 3 FirstValid\n<=\nassert\npop\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 64\nstore 254\ndup\nsubstring 64 72\nbtoi\nstore 253\ndup\nsubstring 72 104\nstore 252\npop\n// Handler 12\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 9\nint 9\nitob\nload 255\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:83:17:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 2\nitob\nload 254\nconcat\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nint 1\nitob // bool\nsubstring 7 8\nconcat\nload 252\nconcat\nload 254\nconcat\nload 253\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`],\n  unsupported: [],\n  version: 1,\n  viewKeys: 1,\n  viewSize: 40\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint8[150]\",\n                \"name\": \"v26\",\n                \"type\": \"uint8[150]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v27\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint8[150]\",\n                \"name\": \"v28\",\n                \"type\": \"uint8[150]\"\n              }\n            ],\n            \"internalType\": \"struct T6\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T19\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e10\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T19\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e11\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v121\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T14\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e12\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T12\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e4\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e5\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v121\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T14\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v58\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T17\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T18\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"NFT_owner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v21\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint8[150]\",\n                \"name\": \"v26\",\n                \"type\": \"uint8[150]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v27\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint8[150]\",\n                \"name\": \"v28\",\n                \"type\": \"uint8[150]\"\n              }\n            ],\n            \"internalType\": \"struct T6\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T19\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m10\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T19\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m11\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v121\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T14\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m12\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T12\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m4\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m5\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v121\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T14\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v31\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v157\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v58\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T17\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v25\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v34\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T15\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v118\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v119\",\n                \"type\": \"address\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T18\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a160408051602080820183524382526000600181905583519182018190529192016040516020818303038152906040526002908051906020019062000072929190620000b4565b50506040805160208082018352600080835293518252825180820185905291518284015282518083038401815260609092019092528051910120905562000197565b828054620000c2906200015a565b90600052602060002090601f016020900481019282620000e6576000855562000131565b82601f106200010157805160ff191683800117855562000131565b8280016001018555821562000131579182015b828111156200013157825182559160200191906001019062000114565b506200013f92915062000143565b5090565b5b808211156200013f576000815560010162000144565b6002810460018216806200016f57607f821691505b602082108114156200019157634e487b7160e01b600052602260045260246000fd5b50919050565b61189b80620001a76000396000f3fe6080604052600436106100a05760003560e01c8063bc0ca2f311610064578063bc0ca2f31461012b578063d95c942f1461013e578063db7edf3d14610151578063dbf62f1814610164578063e633668e14610177578063f9c6a2331461018a576100a7565b80632df46cf4146100ac578063358182d3146100c1578063489ef15a146100d45780635cf275dd146100e75780638dab222014610118576100a7565b366100a757005b600080fd5b6100bf6100ba366004611415565b61019d565b005b6100bf6100cf366004611415565b610352565b6100bf6100e2366004611403565b610642565b3480156100f357600080fd5b506100fc6107fa565b6040516001600160a01b03909116815260200160405180910390f35b6100bf6101263660046114a2565b61091b565b6100bf610139366004611430565b6109ec565b6100bf61014c366004611415565b610b63565b6100bf61015f366004611430565b610cfb565b6100bf610172366004611415565b610e21565b6100bf610185366004611430565b610f26565b6100bf610198366004611430565b610f9e565b6040516101b1906002908390602001611788565b6040516020818303038152906040528051906020012060001c600054146101d757600080fd5b600080556101ea600a60a08301356117f7565b43101580156102125750600a610205601460a08401356117f7565b61020f91906117f7565b43105b61021b57600080fd5b3460808201351461022b57600080fd5b61023b60808201606083016113c6565b6040516001600160a01b039190911690608083013580156108fc02916000818181858888f19350505050158015610276573d6000803e3d6000fd5b507feb3248ee5963d5dc793eac0bd5c78f4353bb98ca05eb56307ce0ab29784c1934816040516102a6919061165d565b60405180910390a16102b661126b565b6102c360208301836113c6565b81516001600160a01b0390911690526020810151600090526102eb60608301604084016113c6565b6020808301516001600160a01b0390921691015261030f60608301604084016113c6565b6020820180516001600160a01b039092166040909201919091528051600060609091015280516001608090910152514360a09091015261034e8161103d565b5050565b604051610366906002908390602001611788565b6040516020818303038152906040528051906020012060001c6000541461038c57600080fd5b60008055341561039b57600080fd5b6103ab60e0820160c083016113e9565b1561053d577f987e13662f624cf716b328c10cdf46a875b1b4371359e6195741c333aab37ea0816040516103df919061165d565b60405180910390a160408051602081019091526000815261040660808301606084016113c6565b6001600160a01b031680825260046001556040805160208082019390935281518082038401815290820190915280516104439260029201906112b8565b506040805160a081018252600080825260208083018290529282018190526060820181905260808201529061047a908401846113c6565b6001600160a01b0316815261049560608401604085016113c6565b6001600160a01b031660208201526104b360808401606085016113c6565b6001600160a01b03908116604083810191825260808681013560608087019182524383880190815284516008602080830191909152895189169682019690965294880151871691850191909152935190941690820152915160a08301525160c082015260e0015b60408051601f1981840301815291905280516020909101206000555061063f9050565b7f987e13662f624cf716b328c10cdf46a875b1b4371359e6195741c333aab37ea08160405161056c919061165d565b60405180910390a161057c61126b565b61058960208301836113c6565b81516001600160a01b0390911690526105a860408301602084016113e9565b602082015190151590526105c260608301604084016113c6565b6020808301516001600160a01b039092169101526105e660808301606084016113c6565b6020820180516001600160a01b0390921660409092019190915251608083013560609091015261061c60e0830160c084016113e9565b602082018051911515608090920191909152514360a09091015261034e8161103d565b50565b604051610656906002908390602001611788565b6040516020818303038152906040528051906020012060001c6000541461067c57600080fd5b6000805561068f600a60a08301356117f7565b431061069a57600080fd5b34156106a557600080fd5b7f0469bf783bd4478b35a4199698773f1a79d3e3265fbc379f762317cfdd279476816040516106d49190611638565b60405180910390a16040805160208101909152600081526106fb60808301606084016113c6565b6001600160a01b0316808252600180556040805160208082019390935281518082038401815290820190915280516107379260029201906112b8565b506040805160a081018252600080825260208083018290529282018190526060820181905260808201529061076e908401846113c6565b6001600160a01b0316815261078960808401606085016113c6565b6001600160a01b0316602082015260c083013560408201526107b2610100840160e085016113c6565b6001600160a01b031660608201524360808201526040516107da906004908390602001611727565b60408051601f198184030181529190528051602090910120600055505050565b60006001805414156108b0576000600280546108159061181b565b80601f01602080910402602001604051908101604052809291908181526020018280546108419061181b565b801561088e5780601f106108635761010080835404028352916020019161088e565b820191906000526020600020905b81548152906001019060200180831161087157829003601f168201915b50505050508060200190518101906108a6919061144b565b5191506109189050565b600260015414156108ca576000600280546108159061181b565b600360015414156108e4576000600280546108159061181b565b600460015414156108fe576000600280546108159061181b565b600560015414156100a7576000600280546108159061181b565b90565b60408051600060208201528235918101919091526060016040516020818303038152906040528051906020012060001c6000541461095857600080fd5b60008055341561096757600080fd5b7f0e517d773f7c4499e5af7ee8f6e2a2a6d8ba0a0ae9161eff670b93a4b10f01ec8160405161099691906116d7565b60405180910390a16109a661126b565b8051339081905260208083018051600090819052815190920183905280516040019290925281516060015280516001608090910152514360a09091015261034e8161103d565b604051610a00906008908390602001611774565b6040516020818303038152906040528051906020012060001c60005414610a2657600080fd5b60008055610a39600a60808301356117f7565b4310158015610a615750600a610a54601460808401356117f7565b610a5e91906117f7565b43105b610a6a57600080fd5b34606082013514610a7a57600080fd5b610a8a60608201604083016113c6565b6040516001600160a01b039190911690606083013580156108fc02916000818181858888f19350505050158015610ac5573d6000803e3d6000fd5b507f19c885d72fe56e7b48652b1fe5b7722ea0c3f3b5d2168e41801b41814a65af4081604051610af591906116c9565b60405180910390a1610b0561126b565b610b1260208301836113c6565b81516001600160a01b03909116905260208082015160009052610b3b90604084019084016113c6565b6020808301516001600160a01b039092169181019190915261030f90604084019084016113c6565b604051610b77906008908390602001611774565b6040516020818303038152906040528051906020012060001c60005414610b9d57600080fd5b60008055610bb0600a60808301356117f7565b4310610bbb57600080fd5b3415610bc657600080fd5b7f7fe68888f95464a709fe8ab0d7952c086d623c185ae2a7d664dcc69b2fcbf29281604051610bf591906116ab565b60405180910390a1604080516020810190915260008152610c1c60608301604084016113c6565b6001600160a01b03168082526003600155604080516020808201939093528151808203840181529082019091528051610c599260029201906112b8565b506040805160a0810182526000808252602080830182905292820181905260608201819052608082015290610c90908401846113c6565b6001600160a01b03168152610cab60608401604085016113c6565b6001600160a01b0316602082015260a08301356040820152610cd360e0840160c085016113c6565b6001600160a01b031660608201524360808201526040516107da906009908390602001611727565b604051610d0f906004908390602001611713565b6040516020818303038152906040528051906020012060001c60005414610d3557600080fd5b600080553415610d4457600080fd5b7f52e0b8c9f6fbbcaedbe1877c6a2129afbec363781e20a9fbdc0b82d0e9c64b2a81604051610d739190611684565b60405180910390a1610d8361126b565b610d9060208301836113c6565b81516001600160a01b039091169052602081015160019052610db860808301606084016113c6565b6020808301516001600160a01b0390921691810191909152610de090604084019084016113c6565b6020820180516001600160a01b0390921660409283015280519184013560609092019190915280516001608090910152514360a09091015261034e8161103d565b604051610e35906002908390602001611788565b6040516020818303038152906040528051906020012060001c60005414610e5b57600080fd5b60008055600a610e70601460a08401356117f7565b610e7a91906117f7565b431015610e8657600080fd5b3415610e9157600080fd5b7fd955cbb17807de820d98406c826a456d6232deefc5754dd24d1ea2fcaf22381481604051610ec0919061165d565b60405180910390a1610ed061126b565b610edd60208301836113c6565b81516001600160a01b03909116905260208082015160009052610f02908301836113c6565b6020808301516001600160a01b039092169181019190915261030f908301836113c6565b604051610f3a906009908390602001611713565b6040516020818303038152906040528051906020012060001c60005414610f6057600080fd5b600080553415610f6f57600080fd5b7f77b154499c7ca86f06a3044bbb50372490dd947a58b28760ad8e925baff6335681604051610d739190611684565b604051610fb2906008908390602001611774565b6040516020818303038152906040528051906020012060001c60005414610fd857600080fd5b60008055600a610fed601460808401356117f7565b610ff791906117f7565b43101561100357600080fd5b341561100e57600080fd5b7f8f4bf9cf37e03326ba5edcaaf032fed3ba63d0502c18d7b0ace88df4066bff2681604051610ec091906116c9565b8060200151608001511561123a5760208101515115611157576040805160208101909152600081526020828101516040908101516001600160a01b0316808452600260015581519283015201604051602081830303815290604052600290805190602001906110ad9291906112b8565b506040805160c0810182526000808252602080830182815283850183815260608086018581526080870186815260a08089019788528b51516001600160a01b039081168a528c880180515115159097528651880151811690955285518a0151909416909152835190910151905290510151909152915190916111349160029184910161179c565b60408051601f198184030181529190528051602090910120600055506112359050565b6040805160208101909152600081526020828101516040908101516001600160a01b0316808452600560015581519283015201604051602081830303815290604052600290805190602001906111ae9291906112b8565b506040805160c0810182526000808252602080830182815283850183815260608086018581526080870186815260a08089019788528b51516001600160a01b039081168a528c880180515115159097528651880151811690955285518a01519094169091528351909101519052905101519091529151909161051a9160029184910161179c565b61063f565b604080518082019091526000808252602082015261034e81600080805560018190556112689060029061133c565b33ff5b60408051606081018252600091810191825290819081526040805160c08101825260008082526020828101829052928201819052606082018190526080820181905260a082015291015290565b8280546112c49061181b565b90600052602060002090601f0160209004810192826112e6576000855561132c565b82601f106112ff57805160ff191683800117855561132c565b8280016001018555821561132c579182015b8281111561132c578251825591602001919060010190611311565b50611338929150611374565b5090565b5080546113489061181b565b6000825580601f1061135a575061063f565b601f01602090049060005260206000209081019061063f91905b5b808211156113385760008155600101611375565b8035801515811461139957600080fd5b919050565b600060e082840312156113af578081fd5b50919050565b600060c082840312156113af578081fd5b6000602082840312156113d7578081fd5b81356113e281611850565b9392505050565b6000602082840312156113fa578081fd5b6113e282611389565b600061010082840312156113af578081fd5b600060e08284031215611426578081fd5b6113e2838361139e565b600060c08284031215611441578081fd5b6113e283836113b5565b60006020828403121561145c578081fd5b6040516020810181811067ffffffffffffffff8211171561148b57634e487b7160e01b83526041600452602483fd5b604052825161149981611850565b81529392505050565b60006125c082840312156113af578081fd5b806000805b60968110156114e957823560ff81168082146114d3578384fd5b86525060209485019492909201916001016114b9565b5050505050565b80356114fb81611850565b6001600160a01b03908116835260208201359061151782611850565b8082166020850152604083013560408501526060830135915061153982611850565b166060830152608090810135910152565b80358252602081013561155c81611850565b6001600160a01b03166020929092019190915250565b803561157d81611850565b6001600160a01b03908116835260208201359061159982611850565b90811660208401526040820135906115b082611850565b16604083015260608181013590830152608090810135910152565b80356115d681611850565b6001600160a01b0381811684526115ef60208401611389565b151560208501526040830135915061160682611850565b908116604084015260608201359061161d82611850565b1660608301526080818101359083015260a090810135910152565b610100810161164782846115cb565b61165760c0830160c0850161154a565b92915050565b60e0810161166b82846115cb565b61167760c08401611389565b151560c083015292915050565b60c0810161169282846114f0565b61169e60a08401611389565b151560a083015292915050565b60e081016116b98284611572565b61165760a0830160a0850161154a565b60c081016116928284611572565b813581526125c081016116f060208084019085016114b4565b6112e0838101359083015261130061170c8184018286016114b4565b5092915050565b82815260c081016113e260208301846114f0565b91825280516001600160a01b03908116602080850191909152820151811660408085019190915282015160608085019190915282015116608080840191909152015160a082015260c00190565b82815260c081016113e26020830184611572565b82815260e081016113e260208301846115cb565b600060e08201905083825260018060a01b0380845116602084015260208401511515604084015280604085015116606084015280606085015116608084015250608083015160a083015260a083015160c08301529392505050565b6000821982111561181657634e487b7160e01b81526011600452602481fd5b500190565b60028104600182168061182f57607f821691505b602082108114156113af57634e487b7160e01b600052602260045260246000fd5b6001600160a01b038116811461063f57600080fdfea2646970667358221220d9bdbee10f4269e7174e381dbe646d87b8d3e35f8e599eeaf9bf042be02a625564736f6c63430008020033`,\n  deployMode: `DM_constructor`,\n  views: {\n    NFT: {\n      owner: `NFT_owner`\n      }\n    }\n  };\n\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\n\n"]},"metadata":{},"sourceType":"module"}