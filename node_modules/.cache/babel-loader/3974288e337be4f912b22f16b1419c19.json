{"ast":null,"code":"var _jsxFileName = \"/home/yaote/final/final/src/components/reach/DeployAttach.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport * as Backend from \"../../build/index.main.mjs\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { Context } from \"../../Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DeployButton = ({\n  ctcArgs\n}) => {\n  _s();\n\n  const [account,,,,, setCtcInfo,, setCtc,, setCtcArgs] = useContext(Context);\n  const [show, setShow] = useState(false);\n  const history = useHistory();\n\n  const deploy = async () => {\n    setShow(true);\n    const ctc = account.deploy(Backend);\n    setCtc([ctc]);\n    setCtcArgs(ctcArgs);\n    const ctcInfo = JSON.stringify(await ctc.getInfo(), null, 2);\n    setCtcInfo([ctcInfo]);\n    history.push('/deploy');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      onClick: deploy,\n      children: \"Deploy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DeployModal, {\n      show: show\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DeployButton, \"lbGGu1nCPqgnw/ecm00qlV5ZAdc=\", false, function () {\n  return [useHistory];\n});\n\n_c = DeployButton;\nexport const AttachButton = () => {\n  _s2();\n\n  const [account,,,,,,, setCtc] = useContext(Context);\n  const [show, setShow] = useState(false);\n  const history = useHistory();\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false);\n\n  const attach = async ctcInfo => {\n    const ctc = await account.attach(Backend, JSON.parse(ctcInfo));\n    setCtc([ctc]);\n    console.log(\"Attached to the contract\");\n    history.push(\"/app/bidder\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      onClick: handleShow,\n      children: \"Attach\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AttachModal, {\n      show: show,\n      handleClose: handleClose,\n      attach: attach\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(AttachButton, \"RmFfA3oHgi4mJ3LTRsrFD86AMro=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = AttachButton;\n\nconst AttachModal = ({\n  show,\n  handleClose,\n  attach\n}) => {\n  const handleAttach = () => {\n    const info = document.querySelector(\"#ctcArea\").value;\n    attach(info);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Attach to Contract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        id: \"ctcArea\",\n        as: \"textarea\",\n        rows: \"10\",\n        placeholder: \"Paste contract info here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleAttach,\n        children: \"Attach\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = AttachModal;\n\nconst DeployModal = ({\n  show\n}) => {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    centered: true,\n    className: \"text-center\",\n    children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Deploying the contract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = DeployModal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DeployButton\");\n$RefreshReg$(_c2, \"AttachButton\");\n$RefreshReg$(_c3, \"AttachModal\");\n$RefreshReg$(_c4, \"DeployModal\");","map":{"version":3,"sources":["/home/yaote/final/final/src/components/reach/DeployAttach.js"],"names":["React","useContext","useState","Backend","useHistory","Button","Modal","Form","Spinner","Context","DeployButton","ctcArgs","account","setCtcInfo","setCtc","setCtcArgs","show","setShow","history","deploy","ctc","ctcInfo","JSON","stringify","getInfo","push","AttachButton","handleShow","handleClose","attach","parse","console","log","AttachModal","handleAttach","info","document","querySelector","value","DeployModal"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport * as Backend from \"../../build/index.main.mjs\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { Context } from \"../../Context\";\n\nexport const DeployButton = ({ ctcArgs }) => {\n    const [account, , , , , setCtcInfo, , setCtc, , setCtcArgs] = useContext(Context);\n    const [show, setShow] = useState(false);\n    const history = useHistory();\n\n    const deploy = async () => {\n        setShow(true);\n        const ctc = account.deploy(Backend);\n        setCtc([ctc]);\n        setCtcArgs(ctcArgs);\n        const ctcInfo = JSON.stringify(await ctc.getInfo(), null, 2);\n        setCtcInfo([ctcInfo]);\n        history.push('/deploy');\n    }\n    return (\n        <>\n            <Button variant=\"success\" onClick={deploy}>\n                Deploy\n            </Button>\n            <DeployModal show={show} />\n        </>\n    );\n}\n\nexport const AttachButton = () => {\n    const [account, , , , , , , setCtc] = useContext(Context);\n    const [show, setShow] = useState(false);\n    const history = useHistory();\n    const handleShow = () => setShow(true);\n    const handleClose = () => setShow(false);\n    const attach = async (ctcInfo) => {\n        const ctc = await account.attach(Backend, JSON.parse(ctcInfo));\n        setCtc([ctc]);\n        console.log(\"Attached to the contract\");\n        history.push(\"/app/bidder\");\n    }\n\n    return (\n        <>\n            <Button variant=\"danger\" onClick={handleShow}>\n                Attach\n            </Button>\n            <AttachModal\n                show={show}\n                handleClose={handleClose}\n                attach={attach} />\n        </>\n    );\n}\n\nconst AttachModal = ({ show, handleClose, attach }) => {\n    const handleAttach = () => {\n        const info = document.querySelector(\"#ctcArea\").value;\n        attach(info);\n    }\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Attach to Contract</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form.Control\n                    id=\"ctcArea\"\n                    as=\"textarea\"\n                    rows=\"10\"\n                    placeholder=\"Paste contract info here\" />\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" onClick={handleAttach}>\n                    Attach\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nconst DeployModal = ({ show }) => {\n    return (\n        <Modal show={show} centered className=\"text-center\">\n            <Modal.Body>\n                <h2>Deploying the contract</h2>\n                <Spinner animation=\"border\" />\n            </Modal.Body>\n        </Modal>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}